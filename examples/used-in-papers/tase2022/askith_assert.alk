/*
    alki -a askith_assert.alk -s -smt="Z3"

    a |-> $a_0
    res |-> 0
    i |-> $i_0
    Path condition:
       ((($a_0.size()>0)&&(0<=$i_0))&&($i_0<($a_0.size()-1))) &&
       !($a_0[$i_0]>$a_0[($i_0+1)])

    a |-> (store (store $a_0 $i_0 $a_0[($i_0+1)]) ($i_0+1) $a_0[$i_0])
    res |-> 0
    tmp |-> $a_0[$i_0]
    i |-> $i_0
    Path condition:
       ((($a_0.size()>0)&&(0<=$i_0))&&($i_0<($a_0.size()-1))) &&
       ($a_0[$i_0]>$a_0[($i_0+1)]) &&
       validStore($a_0, $i_0, $a_0[($i_0+1)]) &&
       validStore((store $a_0 $i_0 $a_0[($i_0+1)]), ($i_0+1), $a_0[$i_0])
*/

@havoc a : array<int>;
@havoc i : int;
@assume a.size() > 0 && 0 <= i && i < a.size() - 1;
if (a[i] > a[i + 1])
{
    tmp = a[i];
    a[i] = a[i + 1];
    a[i + 1] = tmp;
    res = i;
}
res = 0;
@assert a[i] <= a[i + 1];
@assert res > 0 ==> res == i;