swap(out a, i, j) {
  temp = a[i];
  a[i] = a[j];
  a[j] = temp;
}

partition(arr, low, high) {
    pivot = arr[high];
    i = low - 1;

    for (j = low; j <= high - 1; j++)
        if (arr[j] <= pivot)
            swap(arr, ++i, j);

    swap(arr, i + 1, high);
    return i + 1;
}

partition_r(arr, low, high) {
    r = random(high - low + 1) + low;
    swap(arr, r, high);
    return partition(arr, low, high);
}

quickSort(arr, low, high)
{
    if (low < high) {
        p = partition_r(arr, low, high);
        quickSort(arr, low, p - 1);
        quickSort(arr, p + 1, high);
    }
}

quickSort(arr, 0, n - 1);