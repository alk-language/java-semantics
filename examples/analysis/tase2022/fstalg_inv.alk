/*
    alki -a fstalg_inv.alk -m -s -smt="Z3"

    a |-> $a_0
    slp |-> $slp_0
    i |-> $i_1

    [13:11] Loop invariant was verified!
    [14:12] Loop invariant was verified!
    [13:11] Loop invariant was verified!
    [14:12] Loop invariant was verified!

*/

@havoc a : array<int>;
slp = 1;
i = 1;
@assume a.size() > 0;
@assume forall i : int :: 0 <= i && i < a.size() - 1 ==> a[i] <= a[i + 1];
while (i < a.size())
@invariant 1 <= slp && i <= a.size();
@invariant (exists k:int :: slp - 1 <= k && k < i && a[k] == a[k - slp + 1]);
// @invariant (forall k:int :: slp <= k && k < i ==> a[k] != a[k - slp]);
// Z3 TIMEOUT, Dafny TIMEOUT; Why3 with Alt-Ergo WORKS FINE
@modifies slp, i;
{
    if (a[i] == a[i - slp])
        slp = slp + 1;
    i = i + 1;
}