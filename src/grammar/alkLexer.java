// Generated from /home/alex/work/Alk/script/../src/grammar/parts/alk.g4 by ANTLR 4.7.1

    package grammar;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class alkLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		WS=1, COMMENT=2, LINE_COMMENT=3, TO=4, IF=5, ELSE=6, WHILE=7, DO=8, FOR=9, 
		FORALL=10, IN=11, OUT=12, CHOOSE=13, RETURN=14, SUCCESS=15, FAILURE=16, 
		EMPTYSET=17, EMPTYLIST=18, MODIFIES=19, XOR=20, AT=21, BELONGSTO=22, DELETE=23, 
		EMPTY=24, END=25, FIRST=26, FLOAT=27, INSERT=28, INTEGER=29, PRINT=30, 
		POPBACK=31, POPFRONT=32, PUSHBACK=33, PUSHFRONT=34, REMOVE=35, REMOVEALLEQTO=36, 
		REMOVEAT=37, SINGLETONSET=38, SIZE=39, TOPBACK=40, TOPFRONT=41, UPDATE=42, 
		RANDOM=43, ARROW=44, UNION=45, INTERSECT=46, SUBTRACT=47, INT=48, DOUBLE=49, 
		BOOL=50, ID=51, PLUSPLUS=52, MINUSMINUS=53, BITWISE_AND=54, PLUSMOD=55, 
		MINUSMOD=56, PLUSPLUSMOD=57, MINUSMINUSMOD=58, LOWER=59, GREATER=60, LOWEREQ=61, 
		GREATEREQ=62, ISEQUAL=63, NOTEQUAL=64, ASSIGNMENT_OPERATOR=65, MINUS=66, 
		PLUS=67, MUL=68, DIV=69, MOD=70, LPAR=71, RPAR=72, LEFTSHIFT=73, RIGHTSHIFT=74, 
		OR=75, AND=76, NOT=77, SEMICOLON=78, DPOINT=79, VBAR=80, LCB=81, RCB=82, 
		COMMA=83, POINT=84, LBRA=85, RBRA=86, QUOTE=87, QUESTION=88, STRING=89;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"WS", "COMMENT", "LINE_COMMENT", "NONDIGIT", "DIGIT", "NONZERODIGIT", 
		"TO", "IF", "ELSE", "WHILE", "DO", "FOR", "FORALL", "IN", "OUT", "CHOOSE", 
		"RETURN", "SUCCESS", "FAILURE", "EMPTYSET", "EMPTYLIST", "MODIFIES", "XOR", 
		"AT", "BELONGSTO", "DELETE", "EMPTY", "END", "FIRST", "FLOAT", "INSERT", 
		"INTEGER", "PRINT", "POPBACK", "POPFRONT", "PUSHBACK", "PUSHFRONT", "REMOVE", 
		"REMOVEALLEQTO", "REMOVEAT", "SINGLETONSET", "SIZE", "TOPBACK", "TOPFRONT", 
		"UPDATE", "RANDOM", "ARROW", "UNION", "INTERSECT", "SUBTRACT", "INT", 
		"DOUBLE", "BOOL", "ID", "PLUSPLUS", "MINUSMINUS", "BITWISE_AND", "PLUSMOD", 
		"MINUSMOD", "PLUSPLUSMOD", "MINUSMINUSMOD", "LOWER", "GREATER", "LOWEREQ", 
		"GREATEREQ", "ISEQUAL", "NOTEQUAL", "ASSIGNMENT_OPERATOR", "MINUS", "PLUS", 
		"MUL", "DIV", "MOD", "LPAR", "RPAR", "LEFTSHIFT", "RIGHTSHIFT", "OR", 
		"AND", "NOT", "SEMICOLON", "DPOINT", "VBAR", "LCB", "RCB", "COMMA", "POINT", 
		"LBRA", "RBRA", "QUOTE", "QUESTION", "STRING"
	};

	private static final String[] _LITERAL_NAMES = {
		null, null, null, null, "'|->'", "'if'", "'else'", "'while'", "'do'", 
		"'for'", "'forall'", "'in'", "'out'", "'choose'", "'return'", "'success'", 
		"'failure'", "'emptySet'", "'emptyList'", "'modifies'", "'xor'", "'at'", 
		"'belongsTo'", "'delete'", "'empty'", "'end'", "'first'", "'float'", "'insert'", 
		"'int'", "'print'", "'popBack'", "'popFront'", "'pushBack'", "'pushFront'", 
		"'remove'", "'removeAllEqTo'", "'removeAt'", "'singletonSet'", "'size'", 
		"'topBack'", "'topFront'", "'update'", "'random'", "'->'", "'U'", "'^'", 
		"'\\'", null, null, null, null, "'++'", "'--'", "'&'", "'+%'", "'-%'", 
		"'++%'", "'--%'", "'<'", "'>'", "'<='", "'>='", "'=='", "'!='", null, 
		"'-'", "'+'", "'*'", "'/'", "'%'", "'('", "')'", "'<<'", "'>>'", "'||'", 
		"'&&'", "'!'", "';'", "':'", "'|'", "'{'", "'}'", "','", "'.'", "'['", 
		"']'", "'\"'", "'?'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, "WS", "COMMENT", "LINE_COMMENT", "TO", "IF", "ELSE", "WHILE", "DO", 
		"FOR", "FORALL", "IN", "OUT", "CHOOSE", "RETURN", "SUCCESS", "FAILURE", 
		"EMPTYSET", "EMPTYLIST", "MODIFIES", "XOR", "AT", "BELONGSTO", "DELETE", 
		"EMPTY", "END", "FIRST", "FLOAT", "INSERT", "INTEGER", "PRINT", "POPBACK", 
		"POPFRONT", "PUSHBACK", "PUSHFRONT", "REMOVE", "REMOVEALLEQTO", "REMOVEAT", 
		"SINGLETONSET", "SIZE", "TOPBACK", "TOPFRONT", "UPDATE", "RANDOM", "ARROW", 
		"UNION", "INTERSECT", "SUBTRACT", "INT", "DOUBLE", "BOOL", "ID", "PLUSPLUS", 
		"MINUSMINUS", "BITWISE_AND", "PLUSMOD", "MINUSMOD", "PLUSPLUSMOD", "MINUSMINUSMOD", 
		"LOWER", "GREATER", "LOWEREQ", "GREATEREQ", "ISEQUAL", "NOTEQUAL", "ASSIGNMENT_OPERATOR", 
		"MINUS", "PLUS", "MUL", "DIV", "MOD", "LPAR", "RPAR", "LEFTSHIFT", "RIGHTSHIFT", 
		"OR", "AND", "NOT", "SEMICOLON", "DPOINT", "VBAR", "LCB", "RCB", "COMMA", 
		"POINT", "LBRA", "RBRA", "QUOTE", "QUESTION", "STRING"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public alkLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "alk.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2[\u0298\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\4S\tS\4T\tT"+
		"\4U\tU\4V\tV\4W\tW\4X\tX\4Y\tY\4Z\tZ\4[\t[\4\\\t\\\4]\t]\3\2\6\2\u00bd"+
		"\n\2\r\2\16\2\u00be\3\2\3\2\3\3\3\3\3\3\3\3\7\3\u00c7\n\3\f\3\16\3\u00ca"+
		"\13\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\7\4\u00d5\n\4\f\4\16\4\u00d8"+
		"\13\4\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\n"+
		"\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\r\3\r\3\r"+
		"\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\20\3\20\3\20"+
		"\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22"+
		"\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24"+
		"\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26"+
		"\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27"+
		"\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\32\3\32"+
		"\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\34"+
		"\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36"+
		"\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3"+
		"\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3$\3$\3"+
		"$\3$\3%\3%\3%\3%\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3\'\3\'"+
		"\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3)\3)\3"+
		")\3)\3)\3)\3)\3)\3)\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3+\3+\3+\3"+
		"+\3+\3,\3,\3,\3,\3,\3,\3,\3,\3-\3-\3-\3-\3-\3-\3-\3-\3-\3.\3.\3.\3.\3"+
		".\3.\3.\3/\3/\3/\3/\3/\3/\3/\3\60\3\60\3\60\3\61\3\61\3\62\3\62\3\63\3"+
		"\63\3\64\6\64\u01ff\n\64\r\64\16\64\u0200\3\65\6\65\u0204\n\65\r\65\16"+
		"\65\u0205\3\65\3\65\6\65\u020a\n\65\r\65\16\65\u020b\3\66\3\66\3\66\3"+
		"\66\3\66\3\66\3\66\3\66\3\66\5\66\u0217\n\66\3\67\3\67\3\67\7\67\u021c"+
		"\n\67\f\67\16\67\u021f\13\67\38\38\38\39\39\39\3:\3:\3;\3;\3;\3<\3<\3"+
		"<\3=\3=\3=\3=\3>\3>\3>\3>\3?\3?\3@\3@\3A\3A\3A\3B\3B\3B\3C\3C\3C\3D\3"+
		"D\3D\3E\3E\3E\3E\3E\3E\3E\3E\3E\3E\3E\3E\3E\3E\3E\3E\3E\3E\3E\3E\3E\5"+
		"E\u025c\nE\3F\3F\3G\3G\3H\3H\3I\3I\3J\3J\3K\3K\3L\3L\3M\3M\3M\3N\3N\3"+
		"N\3O\3O\3O\3P\3P\3P\3Q\3Q\3R\3R\3S\3S\3T\3T\3U\3U\3V\3V\3W\3W\3X\3X\3"+
		"Y\3Y\3Z\3Z\3[\3[\3\\\3\\\3]\3]\7]\u0292\n]\f]\16]\u0295\13]\3]\3]\3\u00c8"+
		"\2^\3\3\5\4\7\5\t\2\13\2\r\2\17\6\21\7\23\b\25\t\27\n\31\13\33\f\35\r"+
		"\37\16!\17#\20%\21\'\22)\23+\24-\25/\26\61\27\63\30\65\31\67\329\33;\34"+
		"=\35?\36A\37C E!G\"I#K$M%O&Q\'S(U)W*Y+[,]-_.a/c\60e\61g\62i\63k\64m\65"+
		"o\66q\67s8u9w:y;{<}=\177>\u0081?\u0083@\u0085A\u0087B\u0089C\u008bD\u008d"+
		"E\u008fF\u0091G\u0093H\u0095I\u0097J\u0099K\u009bL\u009dM\u009fN\u00a1"+
		"O\u00a3P\u00a5Q\u00a7R\u00a9S\u00abT\u00adU\u00afV\u00b1W\u00b3X\u00b5"+
		"Y\u00b7Z\u00b9[\3\2\b\5\2\13\f\17\17\"\"\4\2\f\f\17\17\5\2C\\aac|\3\2"+
		"\62;\3\2\63;\5\2\f\f\17\17$$\2\u02a7\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2"+
		"\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2"+
		"\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2"+
		"\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2"+
		"\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2"+
		"\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2"+
		"\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U"+
		"\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2"+
		"\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2"+
		"\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{"+
		"\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085"+
		"\3\2\2\2\2\u0087\3\2\2\2\2\u0089\3\2\2\2\2\u008b\3\2\2\2\2\u008d\3\2\2"+
		"\2\2\u008f\3\2\2\2\2\u0091\3\2\2\2\2\u0093\3\2\2\2\2\u0095\3\2\2\2\2\u0097"+
		"\3\2\2\2\2\u0099\3\2\2\2\2\u009b\3\2\2\2\2\u009d\3\2\2\2\2\u009f\3\2\2"+
		"\2\2\u00a1\3\2\2\2\2\u00a3\3\2\2\2\2\u00a5\3\2\2\2\2\u00a7\3\2\2\2\2\u00a9"+
		"\3\2\2\2\2\u00ab\3\2\2\2\2\u00ad\3\2\2\2\2\u00af\3\2\2\2\2\u00b1\3\2\2"+
		"\2\2\u00b3\3\2\2\2\2\u00b5\3\2\2\2\2\u00b7\3\2\2\2\2\u00b9\3\2\2\2\3\u00bc"+
		"\3\2\2\2\5\u00c2\3\2\2\2\7\u00d0\3\2\2\2\t\u00db\3\2\2\2\13\u00dd\3\2"+
		"\2\2\r\u00df\3\2\2\2\17\u00e1\3\2\2\2\21\u00e5\3\2\2\2\23\u00e8\3\2\2"+
		"\2\25\u00ed\3\2\2\2\27\u00f3\3\2\2\2\31\u00f6\3\2\2\2\33\u00fa\3\2\2\2"+
		"\35\u0101\3\2\2\2\37\u0104\3\2\2\2!\u0108\3\2\2\2#\u010f\3\2\2\2%\u0116"+
		"\3\2\2\2\'\u011e\3\2\2\2)\u0126\3\2\2\2+\u012f\3\2\2\2-\u0139\3\2\2\2"+
		"/\u0142\3\2\2\2\61\u0146\3\2\2\2\63\u0149\3\2\2\2\65\u0153\3\2\2\2\67"+
		"\u015a\3\2\2\29\u0160\3\2\2\2;\u0164\3\2\2\2=\u016a\3\2\2\2?\u0170\3\2"+
		"\2\2A\u0177\3\2\2\2C\u017b\3\2\2\2E\u0181\3\2\2\2G\u0189\3\2\2\2I\u0192"+
		"\3\2\2\2K\u019b\3\2\2\2M\u01a5\3\2\2\2O\u01ac\3\2\2\2Q\u01ba\3\2\2\2S"+
		"\u01c3\3\2\2\2U\u01d0\3\2\2\2W\u01d5\3\2\2\2Y\u01dd\3\2\2\2[\u01e6\3\2"+
		"\2\2]\u01ed\3\2\2\2_\u01f4\3\2\2\2a\u01f7\3\2\2\2c\u01f9\3\2\2\2e\u01fb"+
		"\3\2\2\2g\u01fe\3\2\2\2i\u0203\3\2\2\2k\u0216\3\2\2\2m\u0218\3\2\2\2o"+
		"\u0220\3\2\2\2q\u0223\3\2\2\2s\u0226\3\2\2\2u\u0228\3\2\2\2w\u022b\3\2"+
		"\2\2y\u022e\3\2\2\2{\u0232\3\2\2\2}\u0236\3\2\2\2\177\u0238\3\2\2\2\u0081"+
		"\u023a\3\2\2\2\u0083\u023d\3\2\2\2\u0085\u0240\3\2\2\2\u0087\u0243\3\2"+
		"\2\2\u0089\u025b\3\2\2\2\u008b\u025d\3\2\2\2\u008d\u025f\3\2\2\2\u008f"+
		"\u0261\3\2\2\2\u0091\u0263\3\2\2\2\u0093\u0265\3\2\2\2\u0095\u0267\3\2"+
		"\2\2\u0097\u0269\3\2\2\2\u0099\u026b\3\2\2\2\u009b\u026e\3\2\2\2\u009d"+
		"\u0271\3\2\2\2\u009f\u0274\3\2\2\2\u00a1\u0277\3\2\2\2\u00a3\u0279\3\2"+
		"\2\2\u00a5\u027b\3\2\2\2\u00a7\u027d\3\2\2\2\u00a9\u027f\3\2\2\2\u00ab"+
		"\u0281\3\2\2\2\u00ad\u0283\3\2\2\2\u00af\u0285\3\2\2\2\u00b1\u0287\3\2"+
		"\2\2\u00b3\u0289\3\2\2\2\u00b5\u028b\3\2\2\2\u00b7\u028d\3\2\2\2\u00b9"+
		"\u028f\3\2\2\2\u00bb\u00bd\t\2\2\2\u00bc\u00bb\3\2\2\2\u00bd\u00be\3\2"+
		"\2\2\u00be\u00bc\3\2\2\2\u00be\u00bf\3\2\2\2\u00bf\u00c0\3\2\2\2\u00c0"+
		"\u00c1\b\2\2\2\u00c1\4\3\2\2\2\u00c2\u00c3\7\61\2\2\u00c3\u00c4\7,\2\2"+
		"\u00c4\u00c8\3\2\2\2\u00c5\u00c7\13\2\2\2\u00c6\u00c5\3\2\2\2\u00c7\u00ca"+
		"\3\2\2\2\u00c8\u00c9\3\2\2\2\u00c8\u00c6\3\2\2\2\u00c9\u00cb\3\2\2\2\u00ca"+
		"\u00c8\3\2\2\2\u00cb\u00cc\7,\2\2\u00cc\u00cd\7\61\2\2\u00cd\u00ce\3\2"+
		"\2\2\u00ce\u00cf\b\3\2\2\u00cf\6\3\2\2\2\u00d0\u00d1\7\61\2\2\u00d1\u00d2"+
		"\7\61\2\2\u00d2\u00d6\3\2\2\2\u00d3\u00d5\n\3\2\2\u00d4\u00d3\3\2\2\2"+
		"\u00d5\u00d8\3\2\2\2\u00d6\u00d4\3\2\2\2\u00d6\u00d7\3\2\2\2\u00d7\u00d9"+
		"\3\2\2\2\u00d8\u00d6\3\2\2\2\u00d9\u00da\b\4\2\2\u00da\b\3\2\2\2\u00db"+
		"\u00dc\t\4\2\2\u00dc\n\3\2\2\2\u00dd\u00de\t\5\2\2\u00de\f\3\2\2\2\u00df"+
		"\u00e0\t\6\2\2\u00e0\16\3\2\2\2\u00e1\u00e2\7~\2\2\u00e2\u00e3\7/\2\2"+
		"\u00e3\u00e4\7@\2\2\u00e4\20\3\2\2\2\u00e5\u00e6\7k\2\2\u00e6\u00e7\7"+
		"h\2\2\u00e7\22\3\2\2\2\u00e8\u00e9\7g\2\2\u00e9\u00ea\7n\2\2\u00ea\u00eb"+
		"\7u\2\2\u00eb\u00ec\7g\2\2\u00ec\24\3\2\2\2\u00ed\u00ee\7y\2\2\u00ee\u00ef"+
		"\7j\2\2\u00ef\u00f0\7k\2\2\u00f0\u00f1\7n\2\2\u00f1\u00f2\7g\2\2\u00f2"+
		"\26\3\2\2\2\u00f3\u00f4\7f\2\2\u00f4\u00f5\7q\2\2\u00f5\30\3\2\2\2\u00f6"+
		"\u00f7\7h\2\2\u00f7\u00f8\7q\2\2\u00f8\u00f9\7t\2\2\u00f9\32\3\2\2\2\u00fa"+
		"\u00fb\7h\2\2\u00fb\u00fc\7q\2\2\u00fc\u00fd\7t\2\2\u00fd\u00fe\7c\2\2"+
		"\u00fe\u00ff\7n\2\2\u00ff\u0100\7n\2\2\u0100\34\3\2\2\2\u0101\u0102\7"+
		"k\2\2\u0102\u0103\7p\2\2\u0103\36\3\2\2\2\u0104\u0105\7q\2\2\u0105\u0106"+
		"\7w\2\2\u0106\u0107\7v\2\2\u0107 \3\2\2\2\u0108\u0109\7e\2\2\u0109\u010a"+
		"\7j\2\2\u010a\u010b\7q\2\2\u010b\u010c\7q\2\2\u010c\u010d\7u\2\2\u010d"+
		"\u010e\7g\2\2\u010e\"\3\2\2\2\u010f\u0110\7t\2\2\u0110\u0111\7g\2\2\u0111"+
		"\u0112\7v\2\2\u0112\u0113\7w\2\2\u0113\u0114\7t\2\2\u0114\u0115\7p\2\2"+
		"\u0115$\3\2\2\2\u0116\u0117\7u\2\2\u0117\u0118\7w\2\2\u0118\u0119\7e\2"+
		"\2\u0119\u011a\7e\2\2\u011a\u011b\7g\2\2\u011b\u011c\7u\2\2\u011c\u011d"+
		"\7u\2\2\u011d&\3\2\2\2\u011e\u011f\7h\2\2\u011f\u0120\7c\2\2\u0120\u0121"+
		"\7k\2\2\u0121\u0122\7n\2\2\u0122\u0123\7w\2\2\u0123\u0124\7t\2\2\u0124"+
		"\u0125\7g\2\2\u0125(\3\2\2\2\u0126\u0127\7g\2\2\u0127\u0128\7o\2\2\u0128"+
		"\u0129\7r\2\2\u0129\u012a\7v\2\2\u012a\u012b\7{\2\2\u012b\u012c\7U\2\2"+
		"\u012c\u012d\7g\2\2\u012d\u012e\7v\2\2\u012e*\3\2\2\2\u012f\u0130\7g\2"+
		"\2\u0130\u0131\7o\2\2\u0131\u0132\7r\2\2\u0132\u0133\7v\2\2\u0133\u0134"+
		"\7{\2\2\u0134\u0135\7N\2\2\u0135\u0136\7k\2\2\u0136\u0137\7u\2\2\u0137"+
		"\u0138\7v\2\2\u0138,\3\2\2\2\u0139\u013a\7o\2\2\u013a\u013b\7q\2\2\u013b"+
		"\u013c\7f\2\2\u013c\u013d\7k\2\2\u013d\u013e\7h\2\2\u013e\u013f\7k\2\2"+
		"\u013f\u0140\7g\2\2\u0140\u0141\7u\2\2\u0141.\3\2\2\2\u0142\u0143\7z\2"+
		"\2\u0143\u0144\7q\2\2\u0144\u0145\7t\2\2\u0145\60\3\2\2\2\u0146\u0147"+
		"\7c\2\2\u0147\u0148\7v\2\2\u0148\62\3\2\2\2\u0149\u014a\7d\2\2\u014a\u014b"+
		"\7g\2\2\u014b\u014c\7n\2\2\u014c\u014d\7q\2\2\u014d\u014e\7p\2\2\u014e"+
		"\u014f\7i\2\2\u014f\u0150\7u\2\2\u0150\u0151\7V\2\2\u0151\u0152\7q\2\2"+
		"\u0152\64\3\2\2\2\u0153\u0154\7f\2\2\u0154\u0155\7g\2\2\u0155\u0156\7"+
		"n\2\2\u0156\u0157\7g\2\2\u0157\u0158\7v\2\2\u0158\u0159\7g\2\2\u0159\66"+
		"\3\2\2\2\u015a\u015b\7g\2\2\u015b\u015c\7o\2\2\u015c\u015d\7r\2\2\u015d"+
		"\u015e\7v\2\2\u015e\u015f\7{\2\2\u015f8\3\2\2\2\u0160\u0161\7g\2\2\u0161"+
		"\u0162\7p\2\2\u0162\u0163\7f\2\2\u0163:\3\2\2\2\u0164\u0165\7h\2\2\u0165"+
		"\u0166\7k\2\2\u0166\u0167\7t\2\2\u0167\u0168\7u\2\2\u0168\u0169\7v\2\2"+
		"\u0169<\3\2\2\2\u016a\u016b\7h\2\2\u016b\u016c\7n\2\2\u016c\u016d\7q\2"+
		"\2\u016d\u016e\7c\2\2\u016e\u016f\7v\2\2\u016f>\3\2\2\2\u0170\u0171\7"+
		"k\2\2\u0171\u0172\7p\2\2\u0172\u0173\7u\2\2\u0173\u0174\7g\2\2\u0174\u0175"+
		"\7t\2\2\u0175\u0176\7v\2\2\u0176@\3\2\2\2\u0177\u0178\7k\2\2\u0178\u0179"+
		"\7p\2\2\u0179\u017a\7v\2\2\u017aB\3\2\2\2\u017b\u017c\7r\2\2\u017c\u017d"+
		"\7t\2\2\u017d\u017e\7k\2\2\u017e\u017f\7p\2\2\u017f\u0180\7v\2\2\u0180"+
		"D\3\2\2\2\u0181\u0182\7r\2\2\u0182\u0183\7q\2\2\u0183\u0184\7r\2\2\u0184"+
		"\u0185\7D\2\2\u0185\u0186\7c\2\2\u0186\u0187\7e\2\2\u0187\u0188\7m\2\2"+
		"\u0188F\3\2\2\2\u0189\u018a\7r\2\2\u018a\u018b\7q\2\2\u018b\u018c\7r\2"+
		"\2\u018c\u018d\7H\2\2\u018d\u018e\7t\2\2\u018e\u018f\7q\2\2\u018f\u0190"+
		"\7p\2\2\u0190\u0191\7v\2\2\u0191H\3\2\2\2\u0192\u0193\7r\2\2\u0193\u0194"+
		"\7w\2\2\u0194\u0195\7u\2\2\u0195\u0196\7j\2\2\u0196\u0197\7D\2\2\u0197"+
		"\u0198\7c\2\2\u0198\u0199\7e\2\2\u0199\u019a\7m\2\2\u019aJ\3\2\2\2\u019b"+
		"\u019c\7r\2\2\u019c\u019d\7w\2\2\u019d\u019e\7u\2\2\u019e\u019f\7j\2\2"+
		"\u019f\u01a0\7H\2\2\u01a0\u01a1\7t\2\2\u01a1\u01a2\7q\2\2\u01a2\u01a3"+
		"\7p\2\2\u01a3\u01a4\7v\2\2\u01a4L\3\2\2\2\u01a5\u01a6\7t\2\2\u01a6\u01a7"+
		"\7g\2\2\u01a7\u01a8\7o\2\2\u01a8\u01a9\7q\2\2\u01a9\u01aa\7x\2\2\u01aa"+
		"\u01ab\7g\2\2\u01abN\3\2\2\2\u01ac\u01ad\7t\2\2\u01ad\u01ae\7g\2\2\u01ae"+
		"\u01af\7o\2\2\u01af\u01b0\7q\2\2\u01b0\u01b1\7x\2\2\u01b1\u01b2\7g\2\2"+
		"\u01b2\u01b3\7C\2\2\u01b3\u01b4\7n\2\2\u01b4\u01b5\7n\2\2\u01b5\u01b6"+
		"\7G\2\2\u01b6\u01b7\7s\2\2\u01b7\u01b8\7V\2\2\u01b8\u01b9\7q\2\2\u01b9"+
		"P\3\2\2\2\u01ba\u01bb\7t\2\2\u01bb\u01bc\7g\2\2\u01bc\u01bd\7o\2\2\u01bd"+
		"\u01be\7q\2\2\u01be\u01bf\7x\2\2\u01bf\u01c0\7g\2\2\u01c0\u01c1\7C\2\2"+
		"\u01c1\u01c2\7v\2\2\u01c2R\3\2\2\2\u01c3\u01c4\7u\2\2\u01c4\u01c5\7k\2"+
		"\2\u01c5\u01c6\7p\2\2\u01c6\u01c7\7i\2\2\u01c7\u01c8\7n\2\2\u01c8\u01c9"+
		"\7g\2\2\u01c9\u01ca\7v\2\2\u01ca\u01cb\7q\2\2\u01cb\u01cc\7p\2\2\u01cc"+
		"\u01cd\7U\2\2\u01cd\u01ce\7g\2\2\u01ce\u01cf\7v\2\2\u01cfT\3\2\2\2\u01d0"+
		"\u01d1\7u\2\2\u01d1\u01d2\7k\2\2\u01d2\u01d3\7|\2\2\u01d3\u01d4\7g\2\2"+
		"\u01d4V\3\2\2\2\u01d5\u01d6\7v\2\2\u01d6\u01d7\7q\2\2\u01d7\u01d8\7r\2"+
		"\2\u01d8\u01d9\7D\2\2\u01d9\u01da\7c\2\2\u01da\u01db\7e\2\2\u01db\u01dc"+
		"\7m\2\2\u01dcX\3\2\2\2\u01dd\u01de\7v\2\2\u01de\u01df\7q\2\2\u01df\u01e0"+
		"\7r\2\2\u01e0\u01e1\7H\2\2\u01e1\u01e2\7t\2\2\u01e2\u01e3\7q\2\2\u01e3"+
		"\u01e4\7p\2\2\u01e4\u01e5\7v\2\2\u01e5Z\3\2\2\2\u01e6\u01e7\7w\2\2\u01e7"+
		"\u01e8\7r\2\2\u01e8\u01e9\7f\2\2\u01e9\u01ea\7c\2\2\u01ea\u01eb\7v\2\2"+
		"\u01eb\u01ec\7g\2\2\u01ec\\\3\2\2\2\u01ed\u01ee\7t\2\2\u01ee\u01ef\7c"+
		"\2\2\u01ef\u01f0\7p\2\2\u01f0\u01f1\7f\2\2\u01f1\u01f2\7q\2\2\u01f2\u01f3"+
		"\7o\2\2\u01f3^\3\2\2\2\u01f4\u01f5\7/\2\2\u01f5\u01f6\7@\2\2\u01f6`\3"+
		"\2\2\2\u01f7\u01f8\7W\2\2\u01f8b\3\2\2\2\u01f9\u01fa\7`\2\2\u01fad\3\2"+
		"\2\2\u01fb\u01fc\7^\2\2\u01fcf\3\2\2\2\u01fd\u01ff\t\5\2\2\u01fe\u01fd"+
		"\3\2\2\2\u01ff\u0200\3\2\2\2\u0200\u01fe\3\2\2\2\u0200\u0201\3\2\2\2\u0201"+
		"h\3\2\2\2\u0202\u0204\t\5\2\2\u0203\u0202\3\2\2\2\u0204\u0205\3\2\2\2"+
		"\u0205\u0203\3\2\2\2\u0205\u0206\3\2\2\2\u0206\u0207\3\2\2\2\u0207\u0209"+
		"\5\u00afX\2\u0208\u020a\t\5\2\2\u0209\u0208\3\2\2\2\u020a\u020b\3\2\2"+
		"\2\u020b\u0209\3\2\2\2\u020b\u020c\3\2\2\2\u020cj\3\2\2\2\u020d\u020e"+
		"\7v\2\2\u020e\u020f\7t\2\2\u020f\u0210\7w\2\2\u0210\u0217\7g\2\2\u0211"+
		"\u0212\7h\2\2\u0212\u0213\7c\2\2\u0213\u0214\7n\2\2\u0214\u0215\7u\2\2"+
		"\u0215\u0217\7g\2\2\u0216\u020d\3\2\2\2\u0216\u0211\3\2\2\2\u0217l\3\2"+
		"\2\2\u0218\u021d\5\t\5\2\u0219\u021c\5\13\6\2\u021a\u021c\5\t\5\2\u021b"+
		"\u0219\3\2\2\2\u021b\u021a\3\2\2\2\u021c\u021f\3\2\2\2\u021d\u021b\3\2"+
		"\2\2\u021d\u021e\3\2\2\2\u021en\3\2\2\2\u021f\u021d\3\2\2\2\u0220\u0221"+
		"\7-\2\2\u0221\u0222\7-\2\2\u0222p\3\2\2\2\u0223\u0224\7/\2\2\u0224\u0225"+
		"\7/\2\2\u0225r\3\2\2\2\u0226\u0227\7(\2\2\u0227t\3\2\2\2\u0228\u0229\7"+
		"-\2\2\u0229\u022a\7\'\2\2\u022av\3\2\2\2\u022b\u022c\7/\2\2\u022c\u022d"+
		"\7\'\2\2\u022dx\3\2\2\2\u022e\u022f\7-\2\2\u022f\u0230\7-\2\2\u0230\u0231"+
		"\7\'\2\2\u0231z\3\2\2\2\u0232\u0233\7/\2\2\u0233\u0234\7/\2\2\u0234\u0235"+
		"\7\'\2\2\u0235|\3\2\2\2\u0236\u0237\7>\2\2\u0237~\3\2\2\2\u0238\u0239"+
		"\7@\2\2\u0239\u0080\3\2\2\2\u023a\u023b\7>\2\2\u023b\u023c\7?\2\2\u023c"+
		"\u0082\3\2\2\2\u023d\u023e\7@\2\2\u023e\u023f\7?\2\2\u023f\u0084\3\2\2"+
		"\2\u0240\u0241\7?\2\2\u0241\u0242\7?\2\2\u0242\u0086\3\2\2\2\u0243\u0244"+
		"\7#\2\2\u0244\u0245\7?\2\2\u0245\u0088\3\2\2\2\u0246\u025c\7?\2\2\u0247"+
		"\u0248\7-\2\2\u0248\u025c\7?\2\2\u0249\u024a\7/\2\2\u024a\u025c\7?\2\2"+
		"\u024b\u024c\7,\2\2\u024c\u025c\7?\2\2\u024d\u024e\7\61\2\2\u024e\u025c"+
		"\7?\2\2\u024f\u0250\7\'\2\2\u0250\u025c\7?\2\2\u0251\u0252\7>\2\2\u0252"+
		"\u0253\7>\2\2\u0253\u025c\7?\2\2\u0254\u0255\7@\2\2\u0255\u0256\7@\2\2"+
		"\u0256\u025c\7?\2\2\u0257\u0258\7(\2\2\u0258\u025c\7?\2\2\u0259\u025a"+
		"\7~\2\2\u025a\u025c\7?\2\2\u025b\u0246\3\2\2\2\u025b\u0247\3\2\2\2\u025b"+
		"\u0249\3\2\2\2\u025b\u024b\3\2\2\2\u025b\u024d\3\2\2\2\u025b\u024f\3\2"+
		"\2\2\u025b\u0251\3\2\2\2\u025b\u0254\3\2\2\2\u025b\u0257\3\2\2\2\u025b"+
		"\u0259\3\2\2\2\u025c\u008a\3\2\2\2\u025d\u025e\7/\2\2\u025e\u008c\3\2"+
		"\2\2\u025f\u0260\7-\2\2\u0260\u008e\3\2\2\2\u0261\u0262\7,\2\2\u0262\u0090"+
		"\3\2\2\2\u0263\u0264\7\61\2\2\u0264\u0092\3\2\2\2\u0265\u0266\7\'\2\2"+
		"\u0266\u0094\3\2\2\2\u0267\u0268\7*\2\2\u0268\u0096\3\2\2\2\u0269\u026a"+
		"\7+\2\2\u026a\u0098\3\2\2\2\u026b\u026c\7>\2\2\u026c\u026d\7>\2\2\u026d"+
		"\u009a\3\2\2\2\u026e\u026f\7@\2\2\u026f\u0270\7@\2\2\u0270\u009c\3\2\2"+
		"\2\u0271\u0272\7~\2\2\u0272\u0273\7~\2\2\u0273\u009e\3\2\2\2\u0274\u0275"+
		"\7(\2\2\u0275\u0276\7(\2\2\u0276\u00a0\3\2\2\2\u0277\u0278\7#\2\2\u0278"+
		"\u00a2\3\2\2\2\u0279\u027a\7=\2\2\u027a\u00a4\3\2\2\2\u027b\u027c\7<\2"+
		"\2\u027c\u00a6\3\2\2\2\u027d\u027e\7~\2\2\u027e\u00a8\3\2\2\2\u027f\u0280"+
		"\7}\2\2\u0280\u00aa\3\2\2\2\u0281\u0282\7\177\2\2\u0282\u00ac\3\2\2\2"+
		"\u0283\u0284\7.\2\2\u0284\u00ae\3\2\2\2\u0285\u0286\7\60\2\2\u0286\u00b0"+
		"\3\2\2\2\u0287\u0288\7]\2\2\u0288\u00b2\3\2\2\2\u0289\u028a\7_\2\2\u028a"+
		"\u00b4\3\2\2\2\u028b\u028c\7$\2\2\u028c\u00b6\3\2\2\2\u028d\u028e\7A\2"+
		"\2\u028e\u00b8\3\2\2\2\u028f\u0293\7$\2\2\u0290\u0292\n\7\2\2\u0291\u0290"+
		"\3\2\2\2\u0292\u0295\3\2\2\2\u0293\u0291\3\2\2\2\u0293\u0294\3\2\2\2\u0294"+
		"\u0296\3\2\2\2\u0295\u0293\3\2\2\2\u0296\u0297\7$\2\2\u0297\u00ba\3\2"+
		"\2\2\16\2\u00be\u00c8\u00d6\u0200\u0205\u020b\u0216\u021b\u021d\u025b"+
		"\u0293\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}