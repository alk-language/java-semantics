// Generated from /home/alex/work/Alk/script/../src/grammar/parts/alk.g4 by ANTLR 4.7.1

    package grammar;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class alkLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		WS=1, COMMENT=2, LINE_COMMENT=3, TO=4, IF=5, ELSE=6, WHILE=7, DO=8, FOR=9, 
		FORALL=10, IN=11, FROM=12, OUT=13, CHOOSE=14, UNIFORM=15, REPEAT=16, RETURN=17, 
		SUCCESS=18, UNTIL=19, FAILURE=20, EMPTYSET=21, EMPTYLIST=22, MODIFIES=23, 
		XOR=24, ABS=25, ACOS=26, ASIN=27, ATAN=28, COS=29, LOG=30, PI=31, POW=32, 
		SIN=33, SQRT=34, TAN=35, LEN=36, AT=37, BELONGSTO=38, DELETE=39, EMPTY=40, 
		END=41, FIRST=42, FLOAT=43, INSERT=44, INTEGER=45, PRINT=46, POPBACK=47, 
		POPFRONT=48, PUSHBACK=49, PUSHFRONT=50, REMOVE=51, REMOVEALLEQTO=52, REMOVEAT=53, 
		SINGLETONSET=54, SIZE=55, SPLIT=56, TOPBACK=57, TOPFRONT=58, UPDATE=59, 
		RANDOM=60, SOTHAT=61, ARROW=62, UNION=63, INTERSECT=64, SUBTRACT=65, INT=66, 
		DOUBLE=67, BOOL=68, ID=69, PLUSPLUS=70, MINUSMINUS=71, BITWISE_AND=72, 
		PLUSMOD=73, MINUSMOD=74, PLUSPLUSMOD=75, MINUSMINUSMOD=76, LOWER=77, GREATER=78, 
		LOWEREQ=79, GREATEREQ=80, ISEQUAL=81, NOTEQUAL=82, ASSIGNMENT_OPERATOR=83, 
		MINUS=84, PLUS=85, MUL=86, DIV=87, MOD=88, LPAR=89, RPAR=90, LEFTSHIFT=91, 
		RIGHTSHIFT=92, OR=93, AND=94, NOT=95, SEMICOLON=96, DPOINT=97, VBAR=98, 
		LCB=99, RCB=100, COMMA=101, POINT=102, LBRA=103, RBRA=104, QUOTE=105, 
		QUESTION=106, STRING=107;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"WS", "COMMENT", "LINE_COMMENT", "NONDIGIT", "DIGIT", "NONZERODIGIT", 
		"TO", "IF", "ELSE", "WHILE", "DO", "FOR", "FORALL", "IN", "FROM", "OUT", 
		"CHOOSE", "UNIFORM", "REPEAT", "RETURN", "SUCCESS", "UNTIL", "FAILURE", 
		"EMPTYSET", "EMPTYLIST", "MODIFIES", "XOR", "ABS", "ACOS", "ASIN", "ATAN", 
		"COS", "LOG", "PI", "POW", "SIN", "SQRT", "TAN", "LEN", "AT", "BELONGSTO", 
		"DELETE", "EMPTY", "END", "FIRST", "FLOAT", "INSERT", "INTEGER", "PRINT", 
		"POPBACK", "POPFRONT", "PUSHBACK", "PUSHFRONT", "REMOVE", "REMOVEALLEQTO", 
		"REMOVEAT", "SINGLETONSET", "SIZE", "SPLIT", "TOPBACK", "TOPFRONT", "UPDATE", 
		"RANDOM", "SOTHAT", "ARROW", "UNION", "INTERSECT", "SUBTRACT", "INT", 
		"DOUBLE", "BOOL", "ID", "PLUSPLUS", "MINUSMINUS", "BITWISE_AND", "PLUSMOD", 
		"MINUSMOD", "PLUSPLUSMOD", "MINUSMINUSMOD", "LOWER", "GREATER", "LOWEREQ", 
		"GREATEREQ", "ISEQUAL", "NOTEQUAL", "ASSIGNMENT_OPERATOR", "MINUS", "PLUS", 
		"MUL", "DIV", "MOD", "LPAR", "RPAR", "LEFTSHIFT", "RIGHTSHIFT", "OR", 
		"AND", "NOT", "SEMICOLON", "DPOINT", "VBAR", "LCB", "RCB", "COMMA", "POINT", 
		"LBRA", "RBRA", "QUOTE", "QUESTION", "STRING"
	};

	private static final String[] _LITERAL_NAMES = {
		null, null, null, null, "'|->'", "'if'", "'else'", "'while'", "'do'", 
		"'for'", "'forall'", "'in'", "'from'", "'out'", "'choose'", "'uniform'", 
		"'repeat'", "'return'", "'success'", "'until'", "'failure'", "'emptySet'", 
		"'emptyList'", "'modifies'", "'xor'", "'abs'", "'acos'", "'asin'", "'atan'", 
		"'cos'", "'log'", "'pi'", "'pow'", "'sin'", "'sqrt'", "'tan'", "'len'", 
		"'at'", "'belongsTo'", "'delete'", "'empty'", "'end'", "'first'", "'float'", 
		"'insert'", "'int'", "'print'", "'popBack'", "'popFront'", "'pushBack'", 
		"'pushFront'", "'remove'", "'removeAllEqTo'", "'removeAt'", "'singletonSet'", 
		"'size'", "'split'", "'topBack'", "'topFront'", "'update'", "'random'", 
		"'s.t.'", "'->'", "'U'", "'^'", "'\\'", null, null, null, null, "'++'", 
		"'--'", "'&'", "'+%'", "'-%'", "'++%'", "'--%'", "'<'", "'>'", "'<='", 
		"'>='", "'=='", "'!='", null, "'-'", "'+'", "'*'", "'/'", "'%'", "'('", 
		"')'", "'<<'", "'>>'", "'||'", "'&&'", "'!'", "';'", "':'", "'|'", "'{'", 
		"'}'", "','", "'.'", "'['", "']'", "'\"'", "'?'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, "WS", "COMMENT", "LINE_COMMENT", "TO", "IF", "ELSE", "WHILE", "DO", 
		"FOR", "FORALL", "IN", "FROM", "OUT", "CHOOSE", "UNIFORM", "REPEAT", "RETURN", 
		"SUCCESS", "UNTIL", "FAILURE", "EMPTYSET", "EMPTYLIST", "MODIFIES", "XOR", 
		"ABS", "ACOS", "ASIN", "ATAN", "COS", "LOG", "PI", "POW", "SIN", "SQRT", 
		"TAN", "LEN", "AT", "BELONGSTO", "DELETE", "EMPTY", "END", "FIRST", "FLOAT", 
		"INSERT", "INTEGER", "PRINT", "POPBACK", "POPFRONT", "PUSHBACK", "PUSHFRONT", 
		"REMOVE", "REMOVEALLEQTO", "REMOVEAT", "SINGLETONSET", "SIZE", "SPLIT", 
		"TOPBACK", "TOPFRONT", "UPDATE", "RANDOM", "SOTHAT", "ARROW", "UNION", 
		"INTERSECT", "SUBTRACT", "INT", "DOUBLE", "BOOL", "ID", "PLUSPLUS", "MINUSMINUS", 
		"BITWISE_AND", "PLUSMOD", "MINUSMOD", "PLUSPLUSMOD", "MINUSMINUSMOD", 
		"LOWER", "GREATER", "LOWEREQ", "GREATEREQ", "ISEQUAL", "NOTEQUAL", "ASSIGNMENT_OPERATOR", 
		"MINUS", "PLUS", "MUL", "DIV", "MOD", "LPAR", "RPAR", "LEFTSHIFT", "RIGHTSHIFT", 
		"OR", "AND", "NOT", "SEMICOLON", "DPOINT", "VBAR", "LCB", "RCB", "COMMA", 
		"POINT", "LBRA", "RBRA", "QUOTE", "QUESTION", "STRING"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public alkLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "alk.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2m\u0314\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\4S\tS\4T\tT"+
		"\4U\tU\4V\tV\4W\tW\4X\tX\4Y\tY\4Z\tZ\4[\t[\4\\\t\\\4]\t]\4^\t^\4_\t_\4"+
		"`\t`\4a\ta\4b\tb\4c\tc\4d\td\4e\te\4f\tf\4g\tg\4h\th\4i\ti\4j\tj\4k\t"+
		"k\4l\tl\4m\tm\4n\tn\4o\to\3\2\6\2\u00e1\n\2\r\2\16\2\u00e2\3\2\3\2\3\3"+
		"\3\3\3\3\3\3\7\3\u00eb\n\3\f\3\16\3\u00ee\13\3\3\3\3\3\3\3\3\3\3\3\3\4"+
		"\3\4\3\4\3\4\7\4\u00f9\n\4\f\4\16\4\u00fc\13\4\3\4\3\4\3\5\3\5\3\6\3\6"+
		"\3\7\3\7\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13"+
		"\3\13\3\13\3\13\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3"+
		"\16\3\16\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3"+
		"\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3"+
		"\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3"+
		"\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3"+
		"\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3"+
		"\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3"+
		"\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\35\3"+
		"\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3 \3 "+
		"\3 \3 \3 \3!\3!\3!\3!\3\"\3\"\3\"\3\"\3#\3#\3#\3$\3$\3$\3$\3%\3%\3%\3"+
		"%\3&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3)\3)\3)\3*\3*\3*\3*\3*\3"+
		"*\3*\3*\3*\3*\3+\3+\3+\3+\3+\3+\3+\3,\3,\3,\3,\3,\3,\3-\3-\3-\3-\3.\3"+
		".\3.\3.\3.\3.\3/\3/\3/\3/\3/\3/\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\61"+
		"\3\61\3\61\3\61\3\62\3\62\3\62\3\62\3\62\3\62\3\63\3\63\3\63\3\63\3\63"+
		"\3\63\3\63\3\63\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\65\3\65"+
		"\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\66\3\66\3\66\3\66\3\66\3\66\3\66"+
		"\3\66\3\66\3\66\3\67\3\67\3\67\3\67\3\67\3\67\3\67\38\38\38\38\38\38\3"+
		"8\38\38\38\38\38\38\38\39\39\39\39\39\39\39\39\39\3:\3:\3:\3:\3:\3:\3"+
		":\3:\3:\3:\3:\3:\3:\3;\3;\3;\3;\3;\3<\3<\3<\3<\3<\3<\3=\3=\3=\3=\3=\3"+
		"=\3=\3=\3>\3>\3>\3>\3>\3>\3>\3>\3>\3?\3?\3?\3?\3?\3?\3?\3@\3@\3@\3@\3"+
		"@\3@\3@\3A\3A\3A\3A\3A\3B\3B\3B\3C\3C\3D\3D\3E\3E\3F\6F\u027b\nF\rF\16"+
		"F\u027c\3G\6G\u0280\nG\rG\16G\u0281\3G\3G\6G\u0286\nG\rG\16G\u0287\3H"+
		"\3H\3H\3H\3H\3H\3H\3H\3H\5H\u0293\nH\3I\3I\3I\7I\u0298\nI\fI\16I\u029b"+
		"\13I\3J\3J\3J\3K\3K\3K\3L\3L\3M\3M\3M\3N\3N\3N\3O\3O\3O\3O\3P\3P\3P\3"+
		"P\3Q\3Q\3R\3R\3S\3S\3S\3T\3T\3T\3U\3U\3U\3V\3V\3V\3W\3W\3W\3W\3W\3W\3"+
		"W\3W\3W\3W\3W\3W\3W\3W\3W\3W\3W\3W\3W\3W\3W\5W\u02d8\nW\3X\3X\3Y\3Y\3"+
		"Z\3Z\3[\3[\3\\\3\\\3]\3]\3^\3^\3_\3_\3_\3`\3`\3`\3a\3a\3a\3b\3b\3b\3c"+
		"\3c\3d\3d\3e\3e\3f\3f\3g\3g\3h\3h\3i\3i\3j\3j\3k\3k\3l\3l\3m\3m\3n\3n"+
		"\3o\3o\7o\u030e\no\fo\16o\u0311\13o\3o\3o\3\u00ec\2p\3\3\5\4\7\5\t\2\13"+
		"\2\r\2\17\6\21\7\23\b\25\t\27\n\31\13\33\f\35\r\37\16!\17#\20%\21\'\22"+
		")\23+\24-\25/\26\61\27\63\30\65\31\67\329\33;\34=\35?\36A\37C E!G\"I#"+
		"K$M%O&Q\'S(U)W*Y+[,]-_.a/c\60e\61g\62i\63k\64m\65o\66q\67s8u9w:y;{<}="+
		"\177>\u0081?\u0083@\u0085A\u0087B\u0089C\u008bD\u008dE\u008fF\u0091G\u0093"+
		"H\u0095I\u0097J\u0099K\u009bL\u009dM\u009fN\u00a1O\u00a3P\u00a5Q\u00a7"+
		"R\u00a9S\u00abT\u00adU\u00afV\u00b1W\u00b3X\u00b5Y\u00b7Z\u00b9[\u00bb"+
		"\\\u00bd]\u00bf^\u00c1_\u00c3`\u00c5a\u00c7b\u00c9c\u00cbd\u00cde\u00cf"+
		"f\u00d1g\u00d3h\u00d5i\u00d7j\u00d9k\u00dbl\u00ddm\3\2\b\5\2\13\f\17\17"+
		"\"\"\4\2\f\f\17\17\5\2C\\aac|\3\2\62;\3\2\63;\5\2\f\f\17\17$$\2\u0323"+
		"\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3"+
		"\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2"+
		"\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2"+
		"\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2"+
		"\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2"+
		"\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2"+
		"O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3"+
		"\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2"+
		"\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2"+
		"u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2"+
		"\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u0087\3\2\2\2\2\u0089"+
		"\3\2\2\2\2\u008b\3\2\2\2\2\u008d\3\2\2\2\2\u008f\3\2\2\2\2\u0091\3\2\2"+
		"\2\2\u0093\3\2\2\2\2\u0095\3\2\2\2\2\u0097\3\2\2\2\2\u0099\3\2\2\2\2\u009b"+
		"\3\2\2\2\2\u009d\3\2\2\2\2\u009f\3\2\2\2\2\u00a1\3\2\2\2\2\u00a3\3\2\2"+
		"\2\2\u00a5\3\2\2\2\2\u00a7\3\2\2\2\2\u00a9\3\2\2\2\2\u00ab\3\2\2\2\2\u00ad"+
		"\3\2\2\2\2\u00af\3\2\2\2\2\u00b1\3\2\2\2\2\u00b3\3\2\2\2\2\u00b5\3\2\2"+
		"\2\2\u00b7\3\2\2\2\2\u00b9\3\2\2\2\2\u00bb\3\2\2\2\2\u00bd\3\2\2\2\2\u00bf"+
		"\3\2\2\2\2\u00c1\3\2\2\2\2\u00c3\3\2\2\2\2\u00c5\3\2\2\2\2\u00c7\3\2\2"+
		"\2\2\u00c9\3\2\2\2\2\u00cb\3\2\2\2\2\u00cd\3\2\2\2\2\u00cf\3\2\2\2\2\u00d1"+
		"\3\2\2\2\2\u00d3\3\2\2\2\2\u00d5\3\2\2\2\2\u00d7\3\2\2\2\2\u00d9\3\2\2"+
		"\2\2\u00db\3\2\2\2\2\u00dd\3\2\2\2\3\u00e0\3\2\2\2\5\u00e6\3\2\2\2\7\u00f4"+
		"\3\2\2\2\t\u00ff\3\2\2\2\13\u0101\3\2\2\2\r\u0103\3\2\2\2\17\u0105\3\2"+
		"\2\2\21\u0109\3\2\2\2\23\u010c\3\2\2\2\25\u0111\3\2\2\2\27\u0117\3\2\2"+
		"\2\31\u011a\3\2\2\2\33\u011e\3\2\2\2\35\u0125\3\2\2\2\37\u0128\3\2\2\2"+
		"!\u012d\3\2\2\2#\u0131\3\2\2\2%\u0138\3\2\2\2\'\u0140\3\2\2\2)\u0147\3"+
		"\2\2\2+\u014e\3\2\2\2-\u0156\3\2\2\2/\u015c\3\2\2\2\61\u0164\3\2\2\2\63"+
		"\u016d\3\2\2\2\65\u0177\3\2\2\2\67\u0180\3\2\2\29\u0184\3\2\2\2;\u0188"+
		"\3\2\2\2=\u018d\3\2\2\2?\u0192\3\2\2\2A\u0197\3\2\2\2C\u019b\3\2\2\2E"+
		"\u019f\3\2\2\2G\u01a2\3\2\2\2I\u01a6\3\2\2\2K\u01aa\3\2\2\2M\u01af\3\2"+
		"\2\2O\u01b3\3\2\2\2Q\u01b7\3\2\2\2S\u01ba\3\2\2\2U\u01c4\3\2\2\2W\u01cb"+
		"\3\2\2\2Y\u01d1\3\2\2\2[\u01d5\3\2\2\2]\u01db\3\2\2\2_\u01e1\3\2\2\2a"+
		"\u01e8\3\2\2\2c\u01ec\3\2\2\2e\u01f2\3\2\2\2g\u01fa\3\2\2\2i\u0203\3\2"+
		"\2\2k\u020c\3\2\2\2m\u0216\3\2\2\2o\u021d\3\2\2\2q\u022b\3\2\2\2s\u0234"+
		"\3\2\2\2u\u0241\3\2\2\2w\u0246\3\2\2\2y\u024c\3\2\2\2{\u0254\3\2\2\2}"+
		"\u025d\3\2\2\2\177\u0264\3\2\2\2\u0081\u026b\3\2\2\2\u0083\u0270\3\2\2"+
		"\2\u0085\u0273\3\2\2\2\u0087\u0275\3\2\2\2\u0089\u0277\3\2\2\2\u008b\u027a"+
		"\3\2\2\2\u008d\u027f\3\2\2\2\u008f\u0292\3\2\2\2\u0091\u0294\3\2\2\2\u0093"+
		"\u029c\3\2\2\2\u0095\u029f\3\2\2\2\u0097\u02a2\3\2\2\2\u0099\u02a4\3\2"+
		"\2\2\u009b\u02a7\3\2\2\2\u009d\u02aa\3\2\2\2\u009f\u02ae\3\2\2\2\u00a1"+
		"\u02b2\3\2\2\2\u00a3\u02b4\3\2\2\2\u00a5\u02b6\3\2\2\2\u00a7\u02b9\3\2"+
		"\2\2\u00a9\u02bc\3\2\2\2\u00ab\u02bf\3\2\2\2\u00ad\u02d7\3\2\2\2\u00af"+
		"\u02d9\3\2\2\2\u00b1\u02db\3\2\2\2\u00b3\u02dd\3\2\2\2\u00b5\u02df\3\2"+
		"\2\2\u00b7\u02e1\3\2\2\2\u00b9\u02e3\3\2\2\2\u00bb\u02e5\3\2\2\2\u00bd"+
		"\u02e7\3\2\2\2\u00bf\u02ea\3\2\2\2\u00c1\u02ed\3\2\2\2\u00c3\u02f0\3\2"+
		"\2\2\u00c5\u02f3\3\2\2\2\u00c7\u02f5\3\2\2\2\u00c9\u02f7\3\2\2\2\u00cb"+
		"\u02f9\3\2\2\2\u00cd\u02fb\3\2\2\2\u00cf\u02fd\3\2\2\2\u00d1\u02ff\3\2"+
		"\2\2\u00d3\u0301\3\2\2\2\u00d5\u0303\3\2\2\2\u00d7\u0305\3\2\2\2\u00d9"+
		"\u0307\3\2\2\2\u00db\u0309\3\2\2\2\u00dd\u030b\3\2\2\2\u00df\u00e1\t\2"+
		"\2\2\u00e0\u00df\3\2\2\2\u00e1\u00e2\3\2\2\2\u00e2\u00e0\3\2\2\2\u00e2"+
		"\u00e3\3\2\2\2\u00e3\u00e4\3\2\2\2\u00e4\u00e5\b\2\2\2\u00e5\4\3\2\2\2"+
		"\u00e6\u00e7\7\61\2\2\u00e7\u00e8\7,\2\2\u00e8\u00ec\3\2\2\2\u00e9\u00eb"+
		"\13\2\2\2\u00ea\u00e9\3\2\2\2\u00eb\u00ee\3\2\2\2\u00ec\u00ed\3\2\2\2"+
		"\u00ec\u00ea\3\2\2\2\u00ed\u00ef\3\2\2\2\u00ee\u00ec\3\2\2\2\u00ef\u00f0"+
		"\7,\2\2\u00f0\u00f1\7\61\2\2\u00f1\u00f2\3\2\2\2\u00f2\u00f3\b\3\2\2\u00f3"+
		"\6\3\2\2\2\u00f4\u00f5\7\61\2\2\u00f5\u00f6\7\61\2\2\u00f6\u00fa\3\2\2"+
		"\2\u00f7\u00f9\n\3\2\2\u00f8\u00f7\3\2\2\2\u00f9\u00fc\3\2\2\2\u00fa\u00f8"+
		"\3\2\2\2\u00fa\u00fb\3\2\2\2\u00fb\u00fd\3\2\2\2\u00fc\u00fa\3\2\2\2\u00fd"+
		"\u00fe\b\4\2\2\u00fe\b\3\2\2\2\u00ff\u0100\t\4\2\2\u0100\n\3\2\2\2\u0101"+
		"\u0102\t\5\2\2\u0102\f\3\2\2\2\u0103\u0104\t\6\2\2\u0104\16\3\2\2\2\u0105"+
		"\u0106\7~\2\2\u0106\u0107\7/\2\2\u0107\u0108\7@\2\2\u0108\20\3\2\2\2\u0109"+
		"\u010a\7k\2\2\u010a\u010b\7h\2\2\u010b\22\3\2\2\2\u010c\u010d\7g\2\2\u010d"+
		"\u010e\7n\2\2\u010e\u010f\7u\2\2\u010f\u0110\7g\2\2\u0110\24\3\2\2\2\u0111"+
		"\u0112\7y\2\2\u0112\u0113\7j\2\2\u0113\u0114\7k\2\2\u0114\u0115\7n\2\2"+
		"\u0115\u0116\7g\2\2\u0116\26\3\2\2\2\u0117\u0118\7f\2\2\u0118\u0119\7"+
		"q\2\2\u0119\30\3\2\2\2\u011a\u011b\7h\2\2\u011b\u011c\7q\2\2\u011c\u011d"+
		"\7t\2\2\u011d\32\3\2\2\2\u011e\u011f\7h\2\2\u011f\u0120\7q\2\2\u0120\u0121"+
		"\7t\2\2\u0121\u0122\7c\2\2\u0122\u0123\7n\2\2\u0123\u0124\7n\2\2\u0124"+
		"\34\3\2\2\2\u0125\u0126\7k\2\2\u0126\u0127\7p\2\2\u0127\36\3\2\2\2\u0128"+
		"\u0129\7h\2\2\u0129\u012a\7t\2\2\u012a\u012b\7q\2\2\u012b\u012c\7o\2\2"+
		"\u012c \3\2\2\2\u012d\u012e\7q\2\2\u012e\u012f\7w\2\2\u012f\u0130\7v\2"+
		"\2\u0130\"\3\2\2\2\u0131\u0132\7e\2\2\u0132\u0133\7j\2\2\u0133\u0134\7"+
		"q\2\2\u0134\u0135\7q\2\2\u0135\u0136\7u\2\2\u0136\u0137\7g\2\2\u0137$"+
		"\3\2\2\2\u0138\u0139\7w\2\2\u0139\u013a\7p\2\2\u013a\u013b\7k\2\2\u013b"+
		"\u013c\7h\2\2\u013c\u013d\7q\2\2\u013d\u013e\7t\2\2\u013e\u013f\7o\2\2"+
		"\u013f&\3\2\2\2\u0140\u0141\7t\2\2\u0141\u0142\7g\2\2\u0142\u0143\7r\2"+
		"\2\u0143\u0144\7g\2\2\u0144\u0145\7c\2\2\u0145\u0146\7v\2\2\u0146(\3\2"+
		"\2\2\u0147\u0148\7t\2\2\u0148\u0149\7g\2\2\u0149\u014a\7v\2\2\u014a\u014b"+
		"\7w\2\2\u014b\u014c\7t\2\2\u014c\u014d\7p\2\2\u014d*\3\2\2\2\u014e\u014f"+
		"\7u\2\2\u014f\u0150\7w\2\2\u0150\u0151\7e\2\2\u0151\u0152\7e\2\2\u0152"+
		"\u0153\7g\2\2\u0153\u0154\7u\2\2\u0154\u0155\7u\2\2\u0155,\3\2\2\2\u0156"+
		"\u0157\7w\2\2\u0157\u0158\7p\2\2\u0158\u0159\7v\2\2\u0159\u015a\7k\2\2"+
		"\u015a\u015b\7n\2\2\u015b.\3\2\2\2\u015c\u015d\7h\2\2\u015d\u015e\7c\2"+
		"\2\u015e\u015f\7k\2\2\u015f\u0160\7n\2\2\u0160\u0161\7w\2\2\u0161\u0162"+
		"\7t\2\2\u0162\u0163\7g\2\2\u0163\60\3\2\2\2\u0164\u0165\7g\2\2\u0165\u0166"+
		"\7o\2\2\u0166\u0167\7r\2\2\u0167\u0168\7v\2\2\u0168\u0169\7{\2\2\u0169"+
		"\u016a\7U\2\2\u016a\u016b\7g\2\2\u016b\u016c\7v\2\2\u016c\62\3\2\2\2\u016d"+
		"\u016e\7g\2\2\u016e\u016f\7o\2\2\u016f\u0170\7r\2\2\u0170\u0171\7v\2\2"+
		"\u0171\u0172\7{\2\2\u0172\u0173\7N\2\2\u0173\u0174\7k\2\2\u0174\u0175"+
		"\7u\2\2\u0175\u0176\7v\2\2\u0176\64\3\2\2\2\u0177\u0178\7o\2\2\u0178\u0179"+
		"\7q\2\2\u0179\u017a\7f\2\2\u017a\u017b\7k\2\2\u017b\u017c\7h\2\2\u017c"+
		"\u017d\7k\2\2\u017d\u017e\7g\2\2\u017e\u017f\7u\2\2\u017f\66\3\2\2\2\u0180"+
		"\u0181\7z\2\2\u0181\u0182\7q\2\2\u0182\u0183\7t\2\2\u01838\3\2\2\2\u0184"+
		"\u0185\7c\2\2\u0185\u0186\7d\2\2\u0186\u0187\7u\2\2\u0187:\3\2\2\2\u0188"+
		"\u0189\7c\2\2\u0189\u018a\7e\2\2\u018a\u018b\7q\2\2\u018b\u018c\7u\2\2"+
		"\u018c<\3\2\2\2\u018d\u018e\7c\2\2\u018e\u018f\7u\2\2\u018f\u0190\7k\2"+
		"\2\u0190\u0191\7p\2\2\u0191>\3\2\2\2\u0192\u0193\7c\2\2\u0193\u0194\7"+
		"v\2\2\u0194\u0195\7c\2\2\u0195\u0196\7p\2\2\u0196@\3\2\2\2\u0197\u0198"+
		"\7e\2\2\u0198\u0199\7q\2\2\u0199\u019a\7u\2\2\u019aB\3\2\2\2\u019b\u019c"+
		"\7n\2\2\u019c\u019d\7q\2\2\u019d\u019e\7i\2\2\u019eD\3\2\2\2\u019f\u01a0"+
		"\7r\2\2\u01a0\u01a1\7k\2\2\u01a1F\3\2\2\2\u01a2\u01a3\7r\2\2\u01a3\u01a4"+
		"\7q\2\2\u01a4\u01a5\7y\2\2\u01a5H\3\2\2\2\u01a6\u01a7\7u\2\2\u01a7\u01a8"+
		"\7k\2\2\u01a8\u01a9\7p\2\2\u01a9J\3\2\2\2\u01aa\u01ab\7u\2\2\u01ab\u01ac"+
		"\7s\2\2\u01ac\u01ad\7t\2\2\u01ad\u01ae\7v\2\2\u01aeL\3\2\2\2\u01af\u01b0"+
		"\7v\2\2\u01b0\u01b1\7c\2\2\u01b1\u01b2\7p\2\2\u01b2N\3\2\2\2\u01b3\u01b4"+
		"\7n\2\2\u01b4\u01b5\7g\2\2\u01b5\u01b6\7p\2\2\u01b6P\3\2\2\2\u01b7\u01b8"+
		"\7c\2\2\u01b8\u01b9\7v\2\2\u01b9R\3\2\2\2\u01ba\u01bb\7d\2\2\u01bb\u01bc"+
		"\7g\2\2\u01bc\u01bd\7n\2\2\u01bd\u01be\7q\2\2\u01be\u01bf\7p\2\2\u01bf"+
		"\u01c0\7i\2\2\u01c0\u01c1\7u\2\2\u01c1\u01c2\7V\2\2\u01c2\u01c3\7q\2\2"+
		"\u01c3T\3\2\2\2\u01c4\u01c5\7f\2\2\u01c5\u01c6\7g\2\2\u01c6\u01c7\7n\2"+
		"\2\u01c7\u01c8\7g\2\2\u01c8\u01c9\7v\2\2\u01c9\u01ca\7g\2\2\u01caV\3\2"+
		"\2\2\u01cb\u01cc\7g\2\2\u01cc\u01cd\7o\2\2\u01cd\u01ce\7r\2\2\u01ce\u01cf"+
		"\7v\2\2\u01cf\u01d0\7{\2\2\u01d0X\3\2\2\2\u01d1\u01d2\7g\2\2\u01d2\u01d3"+
		"\7p\2\2\u01d3\u01d4\7f\2\2\u01d4Z\3\2\2\2\u01d5\u01d6\7h\2\2\u01d6\u01d7"+
		"\7k\2\2\u01d7\u01d8\7t\2\2\u01d8\u01d9\7u\2\2\u01d9\u01da\7v\2\2\u01da"+
		"\\\3\2\2\2\u01db\u01dc\7h\2\2\u01dc\u01dd\7n\2\2\u01dd\u01de\7q\2\2\u01de"+
		"\u01df\7c\2\2\u01df\u01e0\7v\2\2\u01e0^\3\2\2\2\u01e1\u01e2\7k\2\2\u01e2"+
		"\u01e3\7p\2\2\u01e3\u01e4\7u\2\2\u01e4\u01e5\7g\2\2\u01e5\u01e6\7t\2\2"+
		"\u01e6\u01e7\7v\2\2\u01e7`\3\2\2\2\u01e8\u01e9\7k\2\2\u01e9\u01ea\7p\2"+
		"\2\u01ea\u01eb\7v\2\2\u01ebb\3\2\2\2\u01ec\u01ed\7r\2\2\u01ed\u01ee\7"+
		"t\2\2\u01ee\u01ef\7k\2\2\u01ef\u01f0\7p\2\2\u01f0\u01f1\7v\2\2\u01f1d"+
		"\3\2\2\2\u01f2\u01f3\7r\2\2\u01f3\u01f4\7q\2\2\u01f4\u01f5\7r\2\2\u01f5"+
		"\u01f6\7D\2\2\u01f6\u01f7\7c\2\2\u01f7\u01f8\7e\2\2\u01f8\u01f9\7m\2\2"+
		"\u01f9f\3\2\2\2\u01fa\u01fb\7r\2\2\u01fb\u01fc\7q\2\2\u01fc\u01fd\7r\2"+
		"\2\u01fd\u01fe\7H\2\2\u01fe\u01ff\7t\2\2\u01ff\u0200\7q\2\2\u0200\u0201"+
		"\7p\2\2\u0201\u0202\7v\2\2\u0202h\3\2\2\2\u0203\u0204\7r\2\2\u0204\u0205"+
		"\7w\2\2\u0205\u0206\7u\2\2\u0206\u0207\7j\2\2\u0207\u0208\7D\2\2\u0208"+
		"\u0209\7c\2\2\u0209\u020a\7e\2\2\u020a\u020b\7m\2\2\u020bj\3\2\2\2\u020c"+
		"\u020d\7r\2\2\u020d\u020e\7w\2\2\u020e\u020f\7u\2\2\u020f\u0210\7j\2\2"+
		"\u0210\u0211\7H\2\2\u0211\u0212\7t\2\2\u0212\u0213\7q\2\2\u0213\u0214"+
		"\7p\2\2\u0214\u0215\7v\2\2\u0215l\3\2\2\2\u0216\u0217\7t\2\2\u0217\u0218"+
		"\7g\2\2\u0218\u0219\7o\2\2\u0219\u021a\7q\2\2\u021a\u021b\7x\2\2\u021b"+
		"\u021c\7g\2\2\u021cn\3\2\2\2\u021d\u021e\7t\2\2\u021e\u021f\7g\2\2\u021f"+
		"\u0220\7o\2\2\u0220\u0221\7q\2\2\u0221\u0222\7x\2\2\u0222\u0223\7g\2\2"+
		"\u0223\u0224\7C\2\2\u0224\u0225\7n\2\2\u0225\u0226\7n\2\2\u0226\u0227"+
		"\7G\2\2\u0227\u0228\7s\2\2\u0228\u0229\7V\2\2\u0229\u022a\7q\2\2\u022a"+
		"p\3\2\2\2\u022b\u022c\7t\2\2\u022c\u022d\7g\2\2\u022d\u022e\7o\2\2\u022e"+
		"\u022f\7q\2\2\u022f\u0230\7x\2\2\u0230\u0231\7g\2\2\u0231\u0232\7C\2\2"+
		"\u0232\u0233\7v\2\2\u0233r\3\2\2\2\u0234\u0235\7u\2\2\u0235\u0236\7k\2"+
		"\2\u0236\u0237\7p\2\2\u0237\u0238\7i\2\2\u0238\u0239\7n\2\2\u0239\u023a"+
		"\7g\2\2\u023a\u023b\7v\2\2\u023b\u023c\7q\2\2\u023c\u023d\7p\2\2\u023d"+
		"\u023e\7U\2\2\u023e\u023f\7g\2\2\u023f\u0240\7v\2\2\u0240t\3\2\2\2\u0241"+
		"\u0242\7u\2\2\u0242\u0243\7k\2\2\u0243\u0244\7|\2\2\u0244\u0245\7g\2\2"+
		"\u0245v\3\2\2\2\u0246\u0247\7u\2\2\u0247\u0248\7r\2\2\u0248\u0249\7n\2"+
		"\2\u0249\u024a\7k\2\2\u024a\u024b\7v\2\2\u024bx\3\2\2\2\u024c\u024d\7"+
		"v\2\2\u024d\u024e\7q\2\2\u024e\u024f\7r\2\2\u024f\u0250\7D\2\2\u0250\u0251"+
		"\7c\2\2\u0251\u0252\7e\2\2\u0252\u0253\7m\2\2\u0253z\3\2\2\2\u0254\u0255"+
		"\7v\2\2\u0255\u0256\7q\2\2\u0256\u0257\7r\2\2\u0257\u0258\7H\2\2\u0258"+
		"\u0259\7t\2\2\u0259\u025a\7q\2\2\u025a\u025b\7p\2\2\u025b\u025c\7v\2\2"+
		"\u025c|\3\2\2\2\u025d\u025e\7w\2\2\u025e\u025f\7r\2\2\u025f\u0260\7f\2"+
		"\2\u0260\u0261\7c\2\2\u0261\u0262\7v\2\2\u0262\u0263\7g\2\2\u0263~\3\2"+
		"\2\2\u0264\u0265\7t\2\2\u0265\u0266\7c\2\2\u0266\u0267\7p\2\2\u0267\u0268"+
		"\7f\2\2\u0268\u0269\7q\2\2\u0269\u026a\7o\2\2\u026a\u0080\3\2\2\2\u026b"+
		"\u026c\7u\2\2\u026c\u026d\7\60\2\2\u026d\u026e\7v\2\2\u026e\u026f\7\60"+
		"\2\2\u026f\u0082\3\2\2\2\u0270\u0271\7/\2\2\u0271\u0272\7@\2\2\u0272\u0084"+
		"\3\2\2\2\u0273\u0274\7W\2\2\u0274\u0086\3\2\2\2\u0275\u0276\7`\2\2\u0276"+
		"\u0088\3\2\2\2\u0277\u0278\7^\2\2\u0278\u008a\3\2\2\2\u0279\u027b\t\5"+
		"\2\2\u027a\u0279\3\2\2\2\u027b\u027c\3\2\2\2\u027c\u027a\3\2\2\2\u027c"+
		"\u027d\3\2\2\2\u027d\u008c\3\2\2\2\u027e\u0280\t\5\2\2\u027f\u027e\3\2"+
		"\2\2\u0280\u0281\3\2\2\2\u0281\u027f\3\2\2\2\u0281\u0282\3\2\2\2\u0282"+
		"\u0283\3\2\2\2\u0283\u0285\5\u00d3j\2\u0284\u0286\t\5\2\2\u0285\u0284"+
		"\3\2\2\2\u0286\u0287\3\2\2\2\u0287\u0285\3\2\2\2\u0287\u0288\3\2\2\2\u0288"+
		"\u008e\3\2\2\2\u0289\u028a\7v\2\2\u028a\u028b\7t\2\2\u028b\u028c\7w\2"+
		"\2\u028c\u0293\7g\2\2\u028d\u028e\7h\2\2\u028e\u028f\7c\2\2\u028f\u0290"+
		"\7n\2\2\u0290\u0291\7u\2\2\u0291\u0293\7g\2\2\u0292\u0289\3\2\2\2\u0292"+
		"\u028d\3\2\2\2\u0293\u0090\3\2\2\2\u0294\u0299\5\t\5\2\u0295\u0298\5\13"+
		"\6\2\u0296\u0298\5\t\5\2\u0297\u0295\3\2\2\2\u0297\u0296\3\2\2\2\u0298"+
		"\u029b\3\2\2\2\u0299\u0297\3\2\2\2\u0299\u029a\3\2\2\2\u029a\u0092\3\2"+
		"\2\2\u029b\u0299\3\2\2\2\u029c\u029d\7-\2\2\u029d\u029e\7-\2\2\u029e\u0094"+
		"\3\2\2\2\u029f\u02a0\7/\2\2\u02a0\u02a1\7/\2\2\u02a1\u0096\3\2\2\2\u02a2"+
		"\u02a3\7(\2\2\u02a3\u0098\3\2\2\2\u02a4\u02a5\7-\2\2\u02a5\u02a6\7\'\2"+
		"\2\u02a6\u009a\3\2\2\2\u02a7\u02a8\7/\2\2\u02a8\u02a9\7\'\2\2\u02a9\u009c"+
		"\3\2\2\2\u02aa\u02ab\7-\2\2\u02ab\u02ac\7-\2\2\u02ac\u02ad\7\'\2\2\u02ad"+
		"\u009e\3\2\2\2\u02ae\u02af\7/\2\2\u02af\u02b0\7/\2\2\u02b0\u02b1\7\'\2"+
		"\2\u02b1\u00a0\3\2\2\2\u02b2\u02b3\7>\2\2\u02b3\u00a2\3\2\2\2\u02b4\u02b5"+
		"\7@\2\2\u02b5\u00a4\3\2\2\2\u02b6\u02b7\7>\2\2\u02b7\u02b8\7?\2\2\u02b8"+
		"\u00a6\3\2\2\2\u02b9\u02ba\7@\2\2\u02ba\u02bb\7?\2\2\u02bb\u00a8\3\2\2"+
		"\2\u02bc\u02bd\7?\2\2\u02bd\u02be\7?\2\2\u02be\u00aa\3\2\2\2\u02bf\u02c0"+
		"\7#\2\2\u02c0\u02c1\7?\2\2\u02c1\u00ac\3\2\2\2\u02c2\u02d8\7?\2\2\u02c3"+
		"\u02c4\7-\2\2\u02c4\u02d8\7?\2\2\u02c5\u02c6\7/\2\2\u02c6\u02d8\7?\2\2"+
		"\u02c7\u02c8\7,\2\2\u02c8\u02d8\7?\2\2\u02c9\u02ca\7\61\2\2\u02ca\u02d8"+
		"\7?\2\2\u02cb\u02cc\7\'\2\2\u02cc\u02d8\7?\2\2\u02cd\u02ce\7>\2\2\u02ce"+
		"\u02cf\7>\2\2\u02cf\u02d8\7?\2\2\u02d0\u02d1\7@\2\2\u02d1\u02d2\7@\2\2"+
		"\u02d2\u02d8\7?\2\2\u02d3\u02d4\7(\2\2\u02d4\u02d8\7?\2\2\u02d5\u02d6"+
		"\7~\2\2\u02d6\u02d8\7?\2\2\u02d7\u02c2\3\2\2\2\u02d7\u02c3\3\2\2\2\u02d7"+
		"\u02c5\3\2\2\2\u02d7\u02c7\3\2\2\2\u02d7\u02c9\3\2\2\2\u02d7\u02cb\3\2"+
		"\2\2\u02d7\u02cd\3\2\2\2\u02d7\u02d0\3\2\2\2\u02d7\u02d3\3\2\2\2\u02d7"+
		"\u02d5\3\2\2\2\u02d8\u00ae\3\2\2\2\u02d9\u02da\7/\2\2\u02da\u00b0\3\2"+
		"\2\2\u02db\u02dc\7-\2\2\u02dc\u00b2\3\2\2\2\u02dd\u02de\7,\2\2\u02de\u00b4"+
		"\3\2\2\2\u02df\u02e0\7\61\2\2\u02e0\u00b6\3\2\2\2\u02e1\u02e2\7\'\2\2"+
		"\u02e2\u00b8\3\2\2\2\u02e3\u02e4\7*\2\2\u02e4\u00ba\3\2\2\2\u02e5\u02e6"+
		"\7+\2\2\u02e6\u00bc\3\2\2\2\u02e7\u02e8\7>\2\2\u02e8\u02e9\7>\2\2\u02e9"+
		"\u00be\3\2\2\2\u02ea\u02eb\7@\2\2\u02eb\u02ec\7@\2\2\u02ec\u00c0\3\2\2"+
		"\2\u02ed\u02ee\7~\2\2\u02ee\u02ef\7~\2\2\u02ef\u00c2\3\2\2\2\u02f0\u02f1"+
		"\7(\2\2\u02f1\u02f2\7(\2\2\u02f2\u00c4\3\2\2\2\u02f3\u02f4\7#\2\2\u02f4"+
		"\u00c6\3\2\2\2\u02f5\u02f6\7=\2\2\u02f6\u00c8\3\2\2\2\u02f7\u02f8\7<\2"+
		"\2\u02f8\u00ca\3\2\2\2\u02f9\u02fa\7~\2\2\u02fa\u00cc\3\2\2\2\u02fb\u02fc"+
		"\7}\2\2\u02fc\u00ce\3\2\2\2\u02fd\u02fe\7\177\2\2\u02fe\u00d0\3\2\2\2"+
		"\u02ff\u0300\7.\2\2\u0300\u00d2\3\2\2\2\u0301\u0302\7\60\2\2\u0302\u00d4"+
		"\3\2\2\2\u0303\u0304\7]\2\2\u0304\u00d6\3\2\2\2\u0305\u0306\7_\2\2\u0306"+
		"\u00d8\3\2\2\2\u0307\u0308\7$\2\2\u0308\u00da\3\2\2\2\u0309\u030a\7A\2"+
		"\2\u030a\u00dc\3\2\2\2\u030b\u030f\7$\2\2\u030c\u030e\n\7\2\2\u030d\u030c"+
		"\3\2\2\2\u030e\u0311\3\2\2\2\u030f\u030d\3\2\2\2\u030f\u0310\3\2\2\2\u0310"+
		"\u0312\3\2\2\2\u0311\u030f\3\2\2\2\u0312\u0313\7$\2\2\u0313\u00de\3\2"+
		"\2\2\16\2\u00e2\u00ec\u00fa\u027c\u0281\u0287\u0292\u0297\u0299\u02d7"+
		"\u030f\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}