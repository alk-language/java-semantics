// Generated from ro.uaic.info.alk.parser/AlkLexer.g4 by ANTLR 4.9.3
package ro.uaic.info.alk.parser;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class AlkLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.9.3", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		WS=1, COMMENT=2, LINE_COMMENT=3, ASSERT=4, ASSUME=5, ENSURES=6, HAVOC=7, 
		INVARIANT=8, LOOPASSESRT=9, MODIFIES_ANNO=10, REQURIES=11, SYMBOLIC=12, 
		VAR=13, RESULT=14, OLD=15, IMPLIES=16, EQUIV=17, FORALL=18, EXISTS=19, 
		QUANTIFIER_SEPARATOR=20, TO=21, BREAK=22, CHOOSE=23, CONTINUE=24, FOR=25, 
		FOREACH=26, FROM=27, DO=28, ELSE=29, FAILURE=30, IF=31, IN=32, OUT=33, 
		REPEAT=34, RETURN=35, SUCCESS=36, UNIFORM=37, UNTIL=38, WHILE=39, EMPTYARRAY=40, 
		EMPTYLIST=41, EMPTYMAP=42, EMPTYSET=43, EMPTYSTRUCTURE=44, MODIFIES=45, 
		USES=46, INCLUDE=47, BITWISE_XOR=48, ABS=49, ACOS=50, ASIN=51, ATAN=52, 
		COS=53, LOG=54, PI=55, POW=56, SIN=57, SQRT=58, TAN=59, LEN=60, BOOL_TYPE=61, 
		INT_TYPE=62, FLOAT_TYPE=63, STRING_TYPE=64, ARRAY_TYPE=65, LIST_TYPE=66, 
		MAP_TYPE=67, SET_TYPE=68, STRUCT_TYPE=69, AT=70, EMPTY=71, INSERT=72, 
		KEYS=73, PRINT=74, POPBACK=75, POPFRONT=76, PUSHBACK=77, PUSHFRONT=78, 
		REMOVE=79, REMOVEALLEQTO=80, REMOVEAT=81, SINGLETONSET=82, SIZE=83, SPLIT=84, 
		TOPBACK=85, TOPFRONT=86, UPDATE=87, UNIFORMNAT=88, FLIP=89, UNIFORMFLOAT=90, 
		UNIFORMPERM=91, SOTHAT=92, SYM=93, ARROW=94, NUMSIGN=95, ANNO=96, COUNT=97, 
		UNION=98, INTERSECT=99, SUBTRACT=100, INT=101, FLOAT=102, BOOL=103, ID=104, 
		PLUSPLUS=105, MINUSMINUS=106, BITWISE_AND=107, LOWER=108, GREATER=109, 
		LOWER_EQ=110, GREATER_EQ=111, IS_EQUAL=112, NOT_EQUAL=113, ASSIGNMENT_OPERATOR=114, 
		MINUS=115, PLUS=116, MUL=117, DIV=118, MOD=119, LPAR=120, RPAR=121, LEFT_SHIFT=122, 
		RIGHT_SHIFT=123, OR=124, AND=125, NOT=126, SEMI=127, DPOINT=128, VBAR=129, 
		LCB=130, RCB=131, COMMA=132, POINT=133, LBRA=134, RBRA=135, QUOTE=136, 
		QUESTION=137, STRING=138;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"WS", "COMMENT", "LINE_COMMENT", "NONDIGIT", "DIGIT", "NONZERODIGIT", 
			"ASSERT", "ASSUME", "ENSURES", "HAVOC", "INVARIANT", "LOOPASSESRT", "MODIFIES_ANNO", 
			"REQURIES", "SYMBOLIC", "VAR", "RESULT", "OLD", "IMPLIES", "EQUIV", "FORALL", 
			"EXISTS", "QUANTIFIER_SEPARATOR", "TO", "BREAK", "CHOOSE", "CONTINUE", 
			"FOR", "FOREACH", "FROM", "DO", "ELSE", "FAILURE", "IF", "IN", "OUT", 
			"REPEAT", "RETURN", "SUCCESS", "UNIFORM", "UNTIL", "WHILE", "EMPTYARRAY", 
			"EMPTYLIST", "EMPTYMAP", "EMPTYSET", "EMPTYSTRUCTURE", "MODIFIES", "USES", 
			"INCLUDE", "BITWISE_XOR", "ABS", "ACOS", "ASIN", "ATAN", "COS", "LOG", 
			"PI", "POW", "SIN", "SQRT", "TAN", "LEN", "BOOL_TYPE", "INT_TYPE", "FLOAT_TYPE", 
			"STRING_TYPE", "ARRAY_TYPE", "LIST_TYPE", "MAP_TYPE", "SET_TYPE", "STRUCT_TYPE", 
			"AT", "EMPTY", "INSERT", "KEYS", "PRINT", "POPBACK", "POPFRONT", "PUSHBACK", 
			"PUSHFRONT", "REMOVE", "REMOVEALLEQTO", "REMOVEAT", "SINGLETONSET", "SIZE", 
			"SPLIT", "TOPBACK", "TOPFRONT", "UPDATE", "UNIFORMNAT", "FLIP", "UNIFORMFLOAT", 
			"UNIFORMPERM", "SOTHAT", "SYM", "ARROW", "NUMSIGN", "ANNO", "COUNT", 
			"UNION", "INTERSECT", "SUBTRACT", "INT", "FLOAT", "BOOL", "ID", "PLUSPLUS", 
			"MINUSMINUS", "BITWISE_AND", "LOWER", "GREATER", "LOWER_EQ", "GREATER_EQ", 
			"IS_EQUAL", "NOT_EQUAL", "ASSIGNMENT_OPERATOR", "MINUS", "PLUS", "MUL", 
			"DIV", "MOD", "LPAR", "RPAR", "LEFT_SHIFT", "RIGHT_SHIFT", "OR", "AND", 
			"NOT", "SEMI", "DPOINT", "VBAR", "LCB", "RCB", "COMMA", "POINT", "LBRA", 
			"RBRA", "QUOTE", "QUESTION", "STRING"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, null, null, "'@assert'", "'@assume'", "'@ensures'", "'@havoc'", 
			"'@invariant'", "'@loopassert'", "'@modifies'", "'@requires'", "'@symbolic'", 
			"'@var'", "'\\result'", "'\\old'", "'==>'", "'<==>'", "'forall'", "'exists'", 
			"'::'", "'|->'", "'break'", "'choose'", "'continue'", "'for'", "'foreach'", 
			"'from'", "'do'", "'else'", "'failure'", "'if'", "'in'", "'out'", "'repeat'", 
			"'return'", "'success'", "'uniform'", "'until'", "'while'", "'emptyArray'", 
			"'emptyList'", "'emptyMap'", "'emptySet'", "'emptyStructure'", "'modifies'", 
			"'uses'", "'include'", "'xor'", "'abs'", "'acos'", "'asin'", "'atan'", 
			"'cos'", "'log'", "'pi'", "'pow'", "'sin'", "'sqrt'", "'tan'", "'len'", 
			"'boolean'", "'int'", "'float'", "'string'", "'array'", "'list'", "'map'", 
			"'set'", "'struct'", "'at'", "'empty'", "'insert'", "'keys'", "'print'", 
			"'popBack'", "'popFront'", "'pushBack'", "'pushFront'", "'remove'", "'removeAllEqTo'", 
			"'removeAt'", "'singletonSet'", "'size'", "'split'", "'topBack'", "'topFront'", 
			"'update'", "'uniformNat'", "'flip'", "'uniformFloat'", "'uniformPerm'", 
			"'s.t.'", "'$'", "'->'", "'#'", "'@'", "'Count'", "'U'", "'^'", "'\\'", 
			null, null, null, null, "'++'", "'--'", "'&'", "'<'", "'>'", "'<='", 
			"'>='", "'=='", "'!='", null, "'-'", "'+'", "'*'", "'/'", "'%'", "'('", 
			"')'", "'<<'", "'>>'", "'||'", "'&&'", "'!'", "';'", "':'", "'|'", "'{'", 
			"'}'", "','", "'.'", "'['", "']'", "'\"'", "'?'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "WS", "COMMENT", "LINE_COMMENT", "ASSERT", "ASSUME", "ENSURES", 
			"HAVOC", "INVARIANT", "LOOPASSESRT", "MODIFIES_ANNO", "REQURIES", "SYMBOLIC", 
			"VAR", "RESULT", "OLD", "IMPLIES", "EQUIV", "FORALL", "EXISTS", "QUANTIFIER_SEPARATOR", 
			"TO", "BREAK", "CHOOSE", "CONTINUE", "FOR", "FOREACH", "FROM", "DO", 
			"ELSE", "FAILURE", "IF", "IN", "OUT", "REPEAT", "RETURN", "SUCCESS", 
			"UNIFORM", "UNTIL", "WHILE", "EMPTYARRAY", "EMPTYLIST", "EMPTYMAP", "EMPTYSET", 
			"EMPTYSTRUCTURE", "MODIFIES", "USES", "INCLUDE", "BITWISE_XOR", "ABS", 
			"ACOS", "ASIN", "ATAN", "COS", "LOG", "PI", "POW", "SIN", "SQRT", "TAN", 
			"LEN", "BOOL_TYPE", "INT_TYPE", "FLOAT_TYPE", "STRING_TYPE", "ARRAY_TYPE", 
			"LIST_TYPE", "MAP_TYPE", "SET_TYPE", "STRUCT_TYPE", "AT", "EMPTY", "INSERT", 
			"KEYS", "PRINT", "POPBACK", "POPFRONT", "PUSHBACK", "PUSHFRONT", "REMOVE", 
			"REMOVEALLEQTO", "REMOVEAT", "SINGLETONSET", "SIZE", "SPLIT", "TOPBACK", 
			"TOPFRONT", "UPDATE", "UNIFORMNAT", "FLIP", "UNIFORMFLOAT", "UNIFORMPERM", 
			"SOTHAT", "SYM", "ARROW", "NUMSIGN", "ANNO", "COUNT", "UNION", "INTERSECT", 
			"SUBTRACT", "INT", "FLOAT", "BOOL", "ID", "PLUSPLUS", "MINUSMINUS", "BITWISE_AND", 
			"LOWER", "GREATER", "LOWER_EQ", "GREATER_EQ", "IS_EQUAL", "NOT_EQUAL", 
			"ASSIGNMENT_OPERATOR", "MINUS", "PLUS", "MUL", "DIV", "MOD", "LPAR", 
			"RPAR", "LEFT_SHIFT", "RIGHT_SHIFT", "OR", "AND", "NOT", "SEMI", "DPOINT", 
			"VBAR", "LCB", "RCB", "COMMA", "POINT", "LBRA", "RBRA", "QUOTE", "QUESTION", 
			"STRING"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public AlkLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "AlkLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\u008c\u0446\b\1\4"+
		"\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n"+
		"\4\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t"+
		"=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4"+
		"I\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\4S\tS\4T\t"+
		"T\4U\tU\4V\tV\4W\tW\4X\tX\4Y\tY\4Z\tZ\4[\t[\4\\\t\\\4]\t]\4^\t^\4_\t_"+
		"\4`\t`\4a\ta\4b\tb\4c\tc\4d\td\4e\te\4f\tf\4g\tg\4h\th\4i\ti\4j\tj\4k"+
		"\tk\4l\tl\4m\tm\4n\tn\4o\to\4p\tp\4q\tq\4r\tr\4s\ts\4t\tt\4u\tu\4v\tv"+
		"\4w\tw\4x\tx\4y\ty\4z\tz\4{\t{\4|\t|\4}\t}\4~\t~\4\177\t\177\4\u0080\t"+
		"\u0080\4\u0081\t\u0081\4\u0082\t\u0082\4\u0083\t\u0083\4\u0084\t\u0084"+
		"\4\u0085\t\u0085\4\u0086\t\u0086\4\u0087\t\u0087\4\u0088\t\u0088\4\u0089"+
		"\t\u0089\4\u008a\t\u008a\4\u008b\t\u008b\4\u008c\t\u008c\4\u008d\t\u008d"+
		"\4\u008e\t\u008e\3\2\6\2\u011f\n\2\r\2\16\2\u0120\3\2\3\2\3\3\3\3\3\3"+
		"\3\3\7\3\u0129\n\3\f\3\16\3\u012c\13\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4"+
		"\3\4\7\4\u0137\n\4\f\4\16\4\u013a\13\4\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7"+
		"\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3"+
		"\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f"+
		"\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3"+
		"\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3"+
		"\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3"+
		"\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3"+
		"\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3"+
		"\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3"+
		"\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\32\3\32\3"+
		"\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3"+
		"\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3"+
		"\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3!\3!\3!\3!\3!\3"+
		"\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3$\3$\3$\3%\3%\3%\3%\3&\3&\3&"+
		"\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3(\3(\3)\3"+
		")\3)\3)\3)\3)\3)\3)\3*\3*\3*\3*\3*\3*\3+\3+\3+\3+\3+\3+\3,\3,\3,\3,\3"+
		",\3,\3,\3,\3,\3,\3,\3-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3.\3.\3.\3.\3.\3.\3"+
		".\3.\3.\3/\3/\3/\3/\3/\3/\3/\3/\3/\3\60\3\60\3\60\3\60\3\60\3\60\3\60"+
		"\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\61\3\61\3\61\3\61\3\61\3\61"+
		"\3\61\3\61\3\61\3\62\3\62\3\62\3\62\3\62\3\63\3\63\3\63\3\63\3\63\3\63"+
		"\3\63\3\63\3\64\3\64\3\64\3\64\3\65\3\65\3\65\3\65\3\66\3\66\3\66\3\66"+
		"\3\66\3\67\3\67\3\67\3\67\3\67\38\38\38\38\38\39\39\39\39\3:\3:\3:\3:"+
		"\3;\3;\3;\3<\3<\3<\3<\3=\3=\3=\3=\3>\3>\3>\3>\3>\3?\3?\3?\3?\3@\3@\3@"+
		"\3@\3A\3A\3A\3A\3A\3A\3A\3A\3B\3B\3B\3B\3C\3C\3C\3C\3C\3C\3D\3D\3D\3D"+
		"\3D\3D\3D\3E\3E\3E\3E\3E\3E\3F\3F\3F\3F\3F\3G\3G\3G\3G\3H\3H\3H\3H\3I"+
		"\3I\3I\3I\3I\3I\3I\3J\3J\3J\3K\3K\3K\3K\3K\3K\3L\3L\3L\3L\3L\3L\3L\3M"+
		"\3M\3M\3M\3M\3N\3N\3N\3N\3N\3N\3O\3O\3O\3O\3O\3O\3O\3O\3P\3P\3P\3P\3P"+
		"\3P\3P\3P\3P\3Q\3Q\3Q\3Q\3Q\3Q\3Q\3Q\3Q\3R\3R\3R\3R\3R\3R\3R\3R\3R\3R"+
		"\3S\3S\3S\3S\3S\3S\3S\3T\3T\3T\3T\3T\3T\3T\3T\3T\3T\3T\3T\3T\3T\3U\3U"+
		"\3U\3U\3U\3U\3U\3U\3U\3V\3V\3V\3V\3V\3V\3V\3V\3V\3V\3V\3V\3V\3W\3W\3W"+
		"\3W\3W\3X\3X\3X\3X\3X\3X\3Y\3Y\3Y\3Y\3Y\3Y\3Y\3Y\3Z\3Z\3Z\3Z\3Z\3Z\3Z"+
		"\3Z\3Z\3[\3[\3[\3[\3[\3[\3[\3\\\3\\\3\\\3\\\3\\\3\\\3\\\3\\\3\\\3\\\3"+
		"\\\3]\3]\3]\3]\3]\3^\3^\3^\3^\3^\3^\3^\3^\3^\3^\3^\3^\3^\3_\3_\3_\3_\3"+
		"_\3_\3_\3_\3_\3_\3_\3_\3`\3`\3`\3`\3`\3a\3a\3b\3b\3b\3c\3c\3d\3d\3e\3"+
		"e\3e\3e\3e\3e\3f\3f\3g\3g\3h\3h\3i\6i\u03bb\ni\ri\16i\u03bc\3j\6j\u03c0"+
		"\nj\rj\16j\u03c1\3j\3j\6j\u03c6\nj\rj\16j\u03c7\3k\3k\3k\3k\3k\3k\3k\3"+
		"k\3k\5k\u03d3\nk\3l\3l\3l\7l\u03d8\nl\fl\16l\u03db\13l\3m\3m\3m\3n\3n"+
		"\3n\3o\3o\3p\3p\3q\3q\3r\3r\3r\3s\3s\3s\3t\3t\3t\3u\3u\3u\3v\3v\3v\3v"+
		"\3v\3v\3v\3v\3v\3v\3v\3v\3v\3v\3v\3v\3v\3v\3v\3v\3v\5v\u040a\nv\3w\3w"+
		"\3x\3x\3y\3y\3z\3z\3{\3{\3|\3|\3}\3}\3~\3~\3~\3\177\3\177\3\177\3\u0080"+
		"\3\u0080\3\u0080\3\u0081\3\u0081\3\u0081\3\u0082\3\u0082\3\u0083\3\u0083"+
		"\3\u0084\3\u0084\3\u0085\3\u0085\3\u0086\3\u0086\3\u0087\3\u0087\3\u0088"+
		"\3\u0088\3\u0089\3\u0089\3\u008a\3\u008a\3\u008b\3\u008b\3\u008c\3\u008c"+
		"\3\u008d\3\u008d\3\u008e\3\u008e\7\u008e\u0440\n\u008e\f\u008e\16\u008e"+
		"\u0443\13\u008e\3\u008e\3\u008e\3\u012a\2\u008f\3\3\5\4\7\5\t\2\13\2\r"+
		"\2\17\6\21\7\23\b\25\t\27\n\31\13\33\f\35\r\37\16!\17#\20%\21\'\22)\23"+
		"+\24-\25/\26\61\27\63\30\65\31\67\329\33;\34=\35?\36A\37C E!G\"I#K$M%"+
		"O&Q\'S(U)W*Y+[,]-_.a/c\60e\61g\62i\63k\64m\65o\66q\67s8u9w:y;{<}=\177"+
		">\u0081?\u0083@\u0085A\u0087B\u0089C\u008bD\u008dE\u008fF\u0091G\u0093"+
		"H\u0095I\u0097J\u0099K\u009bL\u009dM\u009fN\u00a1O\u00a3P\u00a5Q\u00a7"+
		"R\u00a9S\u00abT\u00adU\u00afV\u00b1W\u00b3X\u00b5Y\u00b7Z\u00b9[\u00bb"+
		"\\\u00bd]\u00bf^\u00c1_\u00c3`\u00c5a\u00c7b\u00c9c\u00cbd\u00cde\u00cf"+
		"f\u00d1g\u00d3h\u00d5i\u00d7j\u00d9k\u00dbl\u00ddm\u00dfn\u00e1o\u00e3"+
		"p\u00e5q\u00e7r\u00e9s\u00ebt\u00edu\u00efv\u00f1w\u00f3x\u00f5y\u00f7"+
		"z\u00f9{\u00fb|\u00fd}\u00ff~\u0101\177\u0103\u0080\u0105\u0081\u0107"+
		"\u0082\u0109\u0083\u010b\u0084\u010d\u0085\u010f\u0086\u0111\u0087\u0113"+
		"\u0088\u0115\u0089\u0117\u008a\u0119\u008b\u011b\u008c\3\2\b\5\2\13\f"+
		"\17\17\"\"\4\2\f\f\17\17\5\2C\\aac|\3\2\62;\3\2\63;\5\2\f\f\17\17$$\2"+
		"\u0455\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2"+
		"\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3"+
		"\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3"+
		"\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65"+
		"\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3"+
		"\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2"+
		"\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2"+
		"[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3"+
		"\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2"+
		"\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2"+
		"\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u0087\3\2\2\2\2\u0089"+
		"\3\2\2\2\2\u008b\3\2\2\2\2\u008d\3\2\2\2\2\u008f\3\2\2\2\2\u0091\3\2\2"+
		"\2\2\u0093\3\2\2\2\2\u0095\3\2\2\2\2\u0097\3\2\2\2\2\u0099\3\2\2\2\2\u009b"+
		"\3\2\2\2\2\u009d\3\2\2\2\2\u009f\3\2\2\2\2\u00a1\3\2\2\2\2\u00a3\3\2\2"+
		"\2\2\u00a5\3\2\2\2\2\u00a7\3\2\2\2\2\u00a9\3\2\2\2\2\u00ab\3\2\2\2\2\u00ad"+
		"\3\2\2\2\2\u00af\3\2\2\2\2\u00b1\3\2\2\2\2\u00b3\3\2\2\2\2\u00b5\3\2\2"+
		"\2\2\u00b7\3\2\2\2\2\u00b9\3\2\2\2\2\u00bb\3\2\2\2\2\u00bd\3\2\2\2\2\u00bf"+
		"\3\2\2\2\2\u00c1\3\2\2\2\2\u00c3\3\2\2\2\2\u00c5\3\2\2\2\2\u00c7\3\2\2"+
		"\2\2\u00c9\3\2\2\2\2\u00cb\3\2\2\2\2\u00cd\3\2\2\2\2\u00cf\3\2\2\2\2\u00d1"+
		"\3\2\2\2\2\u00d3\3\2\2\2\2\u00d5\3\2\2\2\2\u00d7\3\2\2\2\2\u00d9\3\2\2"+
		"\2\2\u00db\3\2\2\2\2\u00dd\3\2\2\2\2\u00df\3\2\2\2\2\u00e1\3\2\2\2\2\u00e3"+
		"\3\2\2\2\2\u00e5\3\2\2\2\2\u00e7\3\2\2\2\2\u00e9\3\2\2\2\2\u00eb\3\2\2"+
		"\2\2\u00ed\3\2\2\2\2\u00ef\3\2\2\2\2\u00f1\3\2\2\2\2\u00f3\3\2\2\2\2\u00f5"+
		"\3\2\2\2\2\u00f7\3\2\2\2\2\u00f9\3\2\2\2\2\u00fb\3\2\2\2\2\u00fd\3\2\2"+
		"\2\2\u00ff\3\2\2\2\2\u0101\3\2\2\2\2\u0103\3\2\2\2\2\u0105\3\2\2\2\2\u0107"+
		"\3\2\2\2\2\u0109\3\2\2\2\2\u010b\3\2\2\2\2\u010d\3\2\2\2\2\u010f\3\2\2"+
		"\2\2\u0111\3\2\2\2\2\u0113\3\2\2\2\2\u0115\3\2\2\2\2\u0117\3\2\2\2\2\u0119"+
		"\3\2\2\2\2\u011b\3\2\2\2\3\u011e\3\2\2\2\5\u0124\3\2\2\2\7\u0132\3\2\2"+
		"\2\t\u013d\3\2\2\2\13\u013f\3\2\2\2\r\u0141\3\2\2\2\17\u0143\3\2\2\2\21"+
		"\u014b\3\2\2\2\23\u0153\3\2\2\2\25\u015c\3\2\2\2\27\u0163\3\2\2\2\31\u016e"+
		"\3\2\2\2\33\u017a\3\2\2\2\35\u0184\3\2\2\2\37\u018e\3\2\2\2!\u0198\3\2"+
		"\2\2#\u019d\3\2\2\2%\u01a5\3\2\2\2\'\u01aa\3\2\2\2)\u01ae\3\2\2\2+\u01b3"+
		"\3\2\2\2-\u01ba\3\2\2\2/\u01c1\3\2\2\2\61\u01c4\3\2\2\2\63\u01c8\3\2\2"+
		"\2\65\u01ce\3\2\2\2\67\u01d5\3\2\2\29\u01de\3\2\2\2;\u01e2\3\2\2\2=\u01ea"+
		"\3\2\2\2?\u01ef\3\2\2\2A\u01f2\3\2\2\2C\u01f7\3\2\2\2E\u01ff\3\2\2\2G"+
		"\u0202\3\2\2\2I\u0205\3\2\2\2K\u0209\3\2\2\2M\u0210\3\2\2\2O\u0217\3\2"+
		"\2\2Q\u021f\3\2\2\2S\u0227\3\2\2\2U\u022d\3\2\2\2W\u0233\3\2\2\2Y\u023e"+
		"\3\2\2\2[\u0248\3\2\2\2]\u0251\3\2\2\2_\u025a\3\2\2\2a\u0269\3\2\2\2c"+
		"\u0272\3\2\2\2e\u0277\3\2\2\2g\u027f\3\2\2\2i\u0283\3\2\2\2k\u0287\3\2"+
		"\2\2m\u028c\3\2\2\2o\u0291\3\2\2\2q\u0296\3\2\2\2s\u029a\3\2\2\2u\u029e"+
		"\3\2\2\2w\u02a1\3\2\2\2y\u02a5\3\2\2\2{\u02a9\3\2\2\2}\u02ae\3\2\2\2\177"+
		"\u02b2\3\2\2\2\u0081\u02b6\3\2\2\2\u0083\u02be\3\2\2\2\u0085\u02c2\3\2"+
		"\2\2\u0087\u02c8\3\2\2\2\u0089\u02cf\3\2\2\2\u008b\u02d5\3\2\2\2\u008d"+
		"\u02da\3\2\2\2\u008f\u02de\3\2\2\2\u0091\u02e2\3\2\2\2\u0093\u02e9\3\2"+
		"\2\2\u0095\u02ec\3\2\2\2\u0097\u02f2\3\2\2\2\u0099\u02f9\3\2\2\2\u009b"+
		"\u02fe\3\2\2\2\u009d\u0304\3\2\2\2\u009f\u030c\3\2\2\2\u00a1\u0315\3\2"+
		"\2\2\u00a3\u031e\3\2\2\2\u00a5\u0328\3\2\2\2\u00a7\u032f\3\2\2\2\u00a9"+
		"\u033d\3\2\2\2\u00ab\u0346\3\2\2\2\u00ad\u0353\3\2\2\2\u00af\u0358\3\2"+
		"\2\2\u00b1\u035e\3\2\2\2\u00b3\u0366\3\2\2\2\u00b5\u036f\3\2\2\2\u00b7"+
		"\u0376\3\2\2\2\u00b9\u0381\3\2\2\2\u00bb\u0386\3\2\2\2\u00bd\u0393\3\2"+
		"\2\2\u00bf\u039f\3\2\2\2\u00c1\u03a4\3\2\2\2\u00c3\u03a6\3\2\2\2\u00c5"+
		"\u03a9\3\2\2\2\u00c7\u03ab\3\2\2\2\u00c9\u03ad\3\2\2\2\u00cb\u03b3\3\2"+
		"\2\2\u00cd\u03b5\3\2\2\2\u00cf\u03b7\3\2\2\2\u00d1\u03ba\3\2\2\2\u00d3"+
		"\u03bf\3\2\2\2\u00d5\u03d2\3\2\2\2\u00d7\u03d4\3\2\2\2\u00d9\u03dc\3\2"+
		"\2\2\u00db\u03df\3\2\2\2\u00dd\u03e2\3\2\2\2\u00df\u03e4\3\2\2\2\u00e1"+
		"\u03e6\3\2\2\2\u00e3\u03e8\3\2\2\2\u00e5\u03eb\3\2\2\2\u00e7\u03ee\3\2"+
		"\2\2\u00e9\u03f1\3\2\2\2\u00eb\u0409\3\2\2\2\u00ed\u040b\3\2\2\2\u00ef"+
		"\u040d\3\2\2\2\u00f1\u040f\3\2\2\2\u00f3\u0411\3\2\2\2\u00f5\u0413\3\2"+
		"\2\2\u00f7\u0415\3\2\2\2\u00f9\u0417\3\2\2\2\u00fb\u0419\3\2\2\2\u00fd"+
		"\u041c\3\2\2\2\u00ff\u041f\3\2\2\2\u0101\u0422\3\2\2\2\u0103\u0425\3\2"+
		"\2\2\u0105\u0427\3\2\2\2\u0107\u0429\3\2\2\2\u0109\u042b\3\2\2\2\u010b"+
		"\u042d\3\2\2\2\u010d\u042f\3\2\2\2\u010f\u0431\3\2\2\2\u0111\u0433\3\2"+
		"\2\2\u0113\u0435\3\2\2\2\u0115\u0437\3\2\2\2\u0117\u0439\3\2\2\2\u0119"+
		"\u043b\3\2\2\2\u011b\u043d\3\2\2\2\u011d\u011f\t\2\2\2\u011e\u011d\3\2"+
		"\2\2\u011f\u0120\3\2\2\2\u0120\u011e\3\2\2\2\u0120\u0121\3\2\2\2\u0121"+
		"\u0122\3\2\2\2\u0122\u0123\b\2\2\2\u0123\4\3\2\2\2\u0124\u0125\7\61\2"+
		"\2\u0125\u0126\7,\2\2\u0126\u012a\3\2\2\2\u0127\u0129\13\2\2\2\u0128\u0127"+
		"\3\2\2\2\u0129\u012c\3\2\2\2\u012a\u012b\3\2\2\2\u012a\u0128\3\2\2\2\u012b"+
		"\u012d\3\2\2\2\u012c\u012a\3\2\2\2\u012d\u012e\7,\2\2\u012e\u012f\7\61"+
		"\2\2\u012f\u0130\3\2\2\2\u0130\u0131\b\3\2\2\u0131\6\3\2\2\2\u0132\u0133"+
		"\7\61\2\2\u0133\u0134\7\61\2\2\u0134\u0138\3\2\2\2\u0135\u0137\n\3\2\2"+
		"\u0136\u0135\3\2\2\2\u0137\u013a\3\2\2\2\u0138\u0136\3\2\2\2\u0138\u0139"+
		"\3\2\2\2\u0139\u013b\3\2\2\2\u013a\u0138\3\2\2\2\u013b\u013c\b\4\2\2\u013c"+
		"\b\3\2\2\2\u013d\u013e\t\4\2\2\u013e\n\3\2\2\2\u013f\u0140\t\5\2\2\u0140"+
		"\f\3\2\2\2\u0141\u0142\t\6\2\2\u0142\16\3\2\2\2\u0143\u0144\7B\2\2\u0144"+
		"\u0145\7c\2\2\u0145\u0146\7u\2\2\u0146\u0147\7u\2\2\u0147\u0148\7g\2\2"+
		"\u0148\u0149\7t\2\2\u0149\u014a\7v\2\2\u014a\20\3\2\2\2\u014b\u014c\7"+
		"B\2\2\u014c\u014d\7c\2\2\u014d\u014e\7u\2\2\u014e\u014f\7u\2\2\u014f\u0150"+
		"\7w\2\2\u0150\u0151\7o\2\2\u0151\u0152\7g\2\2\u0152\22\3\2\2\2\u0153\u0154"+
		"\7B\2\2\u0154\u0155\7g\2\2\u0155\u0156\7p\2\2\u0156\u0157\7u\2\2\u0157"+
		"\u0158\7w\2\2\u0158\u0159\7t\2\2\u0159\u015a\7g\2\2\u015a\u015b\7u\2\2"+
		"\u015b\24\3\2\2\2\u015c\u015d\7B\2\2\u015d\u015e\7j\2\2\u015e\u015f\7"+
		"c\2\2\u015f\u0160\7x\2\2\u0160\u0161\7q\2\2\u0161\u0162\7e\2\2\u0162\26"+
		"\3\2\2\2\u0163\u0164\7B\2\2\u0164\u0165\7k\2\2\u0165\u0166\7p\2\2\u0166"+
		"\u0167\7x\2\2\u0167\u0168\7c\2\2\u0168\u0169\7t\2\2\u0169\u016a\7k\2\2"+
		"\u016a\u016b\7c\2\2\u016b\u016c\7p\2\2\u016c\u016d\7v\2\2\u016d\30\3\2"+
		"\2\2\u016e\u016f\7B\2\2\u016f\u0170\7n\2\2\u0170\u0171\7q\2\2\u0171\u0172"+
		"\7q\2\2\u0172\u0173\7r\2\2\u0173\u0174\7c\2\2\u0174\u0175\7u\2\2\u0175"+
		"\u0176\7u\2\2\u0176\u0177\7g\2\2\u0177\u0178\7t\2\2\u0178\u0179\7v\2\2"+
		"\u0179\32\3\2\2\2\u017a\u017b\7B\2\2\u017b\u017c\7o\2\2\u017c\u017d\7"+
		"q\2\2\u017d\u017e\7f\2\2\u017e\u017f\7k\2\2\u017f\u0180\7h\2\2\u0180\u0181"+
		"\7k\2\2\u0181\u0182\7g\2\2\u0182\u0183\7u\2\2\u0183\34\3\2\2\2\u0184\u0185"+
		"\7B\2\2\u0185\u0186\7t\2\2\u0186\u0187\7g\2\2\u0187\u0188\7s\2\2\u0188"+
		"\u0189\7w\2\2\u0189\u018a\7k\2\2\u018a\u018b\7t\2\2\u018b\u018c\7g\2\2"+
		"\u018c\u018d\7u\2\2\u018d\36\3\2\2\2\u018e\u018f\7B\2\2\u018f\u0190\7"+
		"u\2\2\u0190\u0191\7{\2\2\u0191\u0192\7o\2\2\u0192\u0193\7d\2\2\u0193\u0194"+
		"\7q\2\2\u0194\u0195\7n\2\2\u0195\u0196\7k\2\2\u0196\u0197\7e\2\2\u0197"+
		" \3\2\2\2\u0198\u0199\7B\2\2\u0199\u019a\7x\2\2\u019a\u019b\7c\2\2\u019b"+
		"\u019c\7t\2\2\u019c\"\3\2\2\2\u019d\u019e\7^\2\2\u019e\u019f\7t\2\2\u019f"+
		"\u01a0\7g\2\2\u01a0\u01a1\7u\2\2\u01a1\u01a2\7w\2\2\u01a2\u01a3\7n\2\2"+
		"\u01a3\u01a4\7v\2\2\u01a4$\3\2\2\2\u01a5\u01a6\7^\2\2\u01a6\u01a7\7q\2"+
		"\2\u01a7\u01a8\7n\2\2\u01a8\u01a9\7f\2\2\u01a9&\3\2\2\2\u01aa\u01ab\7"+
		"?\2\2\u01ab\u01ac\7?\2\2\u01ac\u01ad\7@\2\2\u01ad(\3\2\2\2\u01ae\u01af"+
		"\7>\2\2\u01af\u01b0\7?\2\2\u01b0\u01b1\7?\2\2\u01b1\u01b2\7@\2\2\u01b2"+
		"*\3\2\2\2\u01b3\u01b4\7h\2\2\u01b4\u01b5\7q\2\2\u01b5\u01b6\7t\2\2\u01b6"+
		"\u01b7\7c\2\2\u01b7\u01b8\7n\2\2\u01b8\u01b9\7n\2\2\u01b9,\3\2\2\2\u01ba"+
		"\u01bb\7g\2\2\u01bb\u01bc\7z\2\2\u01bc\u01bd\7k\2\2\u01bd\u01be\7u\2\2"+
		"\u01be\u01bf\7v\2\2\u01bf\u01c0\7u\2\2\u01c0.\3\2\2\2\u01c1\u01c2\7<\2"+
		"\2\u01c2\u01c3\7<\2\2\u01c3\60\3\2\2\2\u01c4\u01c5\7~\2\2\u01c5\u01c6"+
		"\7/\2\2\u01c6\u01c7\7@\2\2\u01c7\62\3\2\2\2\u01c8\u01c9\7d\2\2\u01c9\u01ca"+
		"\7t\2\2\u01ca\u01cb\7g\2\2\u01cb\u01cc\7c\2\2\u01cc\u01cd\7m\2\2\u01cd"+
		"\64\3\2\2\2\u01ce\u01cf\7e\2\2\u01cf\u01d0\7j\2\2\u01d0\u01d1\7q\2\2\u01d1"+
		"\u01d2\7q\2\2\u01d2\u01d3\7u\2\2\u01d3\u01d4\7g\2\2\u01d4\66\3\2\2\2\u01d5"+
		"\u01d6\7e\2\2\u01d6\u01d7\7q\2\2\u01d7\u01d8\7p\2\2\u01d8\u01d9\7v\2\2"+
		"\u01d9\u01da\7k\2\2\u01da\u01db\7p\2\2\u01db\u01dc\7w\2\2\u01dc\u01dd"+
		"\7g\2\2\u01dd8\3\2\2\2\u01de\u01df\7h\2\2\u01df\u01e0\7q\2\2\u01e0\u01e1"+
		"\7t\2\2\u01e1:\3\2\2\2\u01e2\u01e3\7h\2\2\u01e3\u01e4\7q\2\2\u01e4\u01e5"+
		"\7t\2\2\u01e5\u01e6\7g\2\2\u01e6\u01e7\7c\2\2\u01e7\u01e8\7e\2\2\u01e8"+
		"\u01e9\7j\2\2\u01e9<\3\2\2\2\u01ea\u01eb\7h\2\2\u01eb\u01ec\7t\2\2\u01ec"+
		"\u01ed\7q\2\2\u01ed\u01ee\7o\2\2\u01ee>\3\2\2\2\u01ef\u01f0\7f\2\2\u01f0"+
		"\u01f1\7q\2\2\u01f1@\3\2\2\2\u01f2\u01f3\7g\2\2\u01f3\u01f4\7n\2\2\u01f4"+
		"\u01f5\7u\2\2\u01f5\u01f6\7g\2\2\u01f6B\3\2\2\2\u01f7\u01f8\7h\2\2\u01f8"+
		"\u01f9\7c\2\2\u01f9\u01fa\7k\2\2\u01fa\u01fb\7n\2\2\u01fb\u01fc\7w\2\2"+
		"\u01fc\u01fd\7t\2\2\u01fd\u01fe\7g\2\2\u01feD\3\2\2\2\u01ff\u0200\7k\2"+
		"\2\u0200\u0201\7h\2\2\u0201F\3\2\2\2\u0202\u0203\7k\2\2\u0203\u0204\7"+
		"p\2\2\u0204H\3\2\2\2\u0205\u0206\7q\2\2\u0206\u0207\7w\2\2\u0207\u0208"+
		"\7v\2\2\u0208J\3\2\2\2\u0209\u020a\7t\2\2\u020a\u020b\7g\2\2\u020b\u020c"+
		"\7r\2\2\u020c\u020d\7g\2\2\u020d\u020e\7c\2\2\u020e\u020f\7v\2\2\u020f"+
		"L\3\2\2\2\u0210\u0211\7t\2\2\u0211\u0212\7g\2\2\u0212\u0213\7v\2\2\u0213"+
		"\u0214\7w\2\2\u0214\u0215\7t\2\2\u0215\u0216\7p\2\2\u0216N\3\2\2\2\u0217"+
		"\u0218\7u\2\2\u0218\u0219\7w\2\2\u0219\u021a\7e\2\2\u021a\u021b\7e\2\2"+
		"\u021b\u021c\7g\2\2\u021c\u021d\7u\2\2\u021d\u021e\7u\2\2\u021eP\3\2\2"+
		"\2\u021f\u0220\7w\2\2\u0220\u0221\7p\2\2\u0221\u0222\7k\2\2\u0222\u0223"+
		"\7h\2\2\u0223\u0224\7q\2\2\u0224\u0225\7t\2\2\u0225\u0226\7o\2\2\u0226"+
		"R\3\2\2\2\u0227\u0228\7w\2\2\u0228\u0229\7p\2\2\u0229\u022a\7v\2\2\u022a"+
		"\u022b\7k\2\2\u022b\u022c\7n\2\2\u022cT\3\2\2\2\u022d\u022e\7y\2\2\u022e"+
		"\u022f\7j\2\2\u022f\u0230\7k\2\2\u0230\u0231\7n\2\2\u0231\u0232\7g\2\2"+
		"\u0232V\3\2\2\2\u0233\u0234\7g\2\2\u0234\u0235\7o\2\2\u0235\u0236\7r\2"+
		"\2\u0236\u0237\7v\2\2\u0237\u0238\7{\2\2\u0238\u0239\7C\2\2\u0239\u023a"+
		"\7t\2\2\u023a\u023b\7t\2\2\u023b\u023c\7c\2\2\u023c\u023d\7{\2\2\u023d"+
		"X\3\2\2\2\u023e\u023f\7g\2\2\u023f\u0240\7o\2\2\u0240\u0241\7r\2\2\u0241"+
		"\u0242\7v\2\2\u0242\u0243\7{\2\2\u0243\u0244\7N\2\2\u0244\u0245\7k\2\2"+
		"\u0245\u0246\7u\2\2\u0246\u0247\7v\2\2\u0247Z\3\2\2\2\u0248\u0249\7g\2"+
		"\2\u0249\u024a\7o\2\2\u024a\u024b\7r\2\2\u024b\u024c\7v\2\2\u024c\u024d"+
		"\7{\2\2\u024d\u024e\7O\2\2\u024e\u024f\7c\2\2\u024f\u0250\7r\2\2\u0250"+
		"\\\3\2\2\2\u0251\u0252\7g\2\2\u0252\u0253\7o\2\2\u0253\u0254\7r\2\2\u0254"+
		"\u0255\7v\2\2\u0255\u0256\7{\2\2\u0256\u0257\7U\2\2\u0257\u0258\7g\2\2"+
		"\u0258\u0259\7v\2\2\u0259^\3\2\2\2\u025a\u025b\7g\2\2\u025b\u025c\7o\2"+
		"\2\u025c\u025d\7r\2\2\u025d\u025e\7v\2\2\u025e\u025f\7{\2\2\u025f\u0260"+
		"\7U\2\2\u0260\u0261\7v\2\2\u0261\u0262\7t\2\2\u0262\u0263\7w\2\2\u0263"+
		"\u0264\7e\2\2\u0264\u0265\7v\2\2\u0265\u0266\7w\2\2\u0266\u0267\7t\2\2"+
		"\u0267\u0268\7g\2\2\u0268`\3\2\2\2\u0269\u026a\7o\2\2\u026a\u026b\7q\2"+
		"\2\u026b\u026c\7f\2\2\u026c\u026d\7k\2\2\u026d\u026e\7h\2\2\u026e\u026f"+
		"\7k\2\2\u026f\u0270\7g\2\2\u0270\u0271\7u\2\2\u0271b\3\2\2\2\u0272\u0273"+
		"\7w\2\2\u0273\u0274\7u\2\2\u0274\u0275\7g\2\2\u0275\u0276\7u\2\2\u0276"+
		"d\3\2\2\2\u0277\u0278\7k\2\2\u0278\u0279\7p\2\2\u0279\u027a\7e\2\2\u027a"+
		"\u027b\7n\2\2\u027b\u027c\7w\2\2\u027c\u027d\7f\2\2\u027d\u027e\7g\2\2"+
		"\u027ef\3\2\2\2\u027f\u0280\7z\2\2\u0280\u0281\7q\2\2\u0281\u0282\7t\2"+
		"\2\u0282h\3\2\2\2\u0283\u0284\7c\2\2\u0284\u0285\7d\2\2\u0285\u0286\7"+
		"u\2\2\u0286j\3\2\2\2\u0287\u0288\7c\2\2\u0288\u0289\7e\2\2\u0289\u028a"+
		"\7q\2\2\u028a\u028b\7u\2\2\u028bl\3\2\2\2\u028c\u028d\7c\2\2\u028d\u028e"+
		"\7u\2\2\u028e\u028f\7k\2\2\u028f\u0290\7p\2\2\u0290n\3\2\2\2\u0291\u0292"+
		"\7c\2\2\u0292\u0293\7v\2\2\u0293\u0294\7c\2\2\u0294\u0295\7p\2\2\u0295"+
		"p\3\2\2\2\u0296\u0297\7e\2\2\u0297\u0298\7q\2\2\u0298\u0299\7u\2\2\u0299"+
		"r\3\2\2\2\u029a\u029b\7n\2\2\u029b\u029c\7q\2\2\u029c\u029d\7i\2\2\u029d"+
		"t\3\2\2\2\u029e\u029f\7r\2\2\u029f\u02a0\7k\2\2\u02a0v\3\2\2\2\u02a1\u02a2"+
		"\7r\2\2\u02a2\u02a3\7q\2\2\u02a3\u02a4\7y\2\2\u02a4x\3\2\2\2\u02a5\u02a6"+
		"\7u\2\2\u02a6\u02a7\7k\2\2\u02a7\u02a8\7p\2\2\u02a8z\3\2\2\2\u02a9\u02aa"+
		"\7u\2\2\u02aa\u02ab\7s\2\2\u02ab\u02ac\7t\2\2\u02ac\u02ad\7v\2\2\u02ad"+
		"|\3\2\2\2\u02ae\u02af\7v\2\2\u02af\u02b0\7c\2\2\u02b0\u02b1\7p\2\2\u02b1"+
		"~\3\2\2\2\u02b2\u02b3\7n\2\2\u02b3\u02b4\7g\2\2\u02b4\u02b5\7p\2\2\u02b5"+
		"\u0080\3\2\2\2\u02b6\u02b7\7d\2\2\u02b7\u02b8\7q\2\2\u02b8\u02b9\7q\2"+
		"\2\u02b9\u02ba\7n\2\2\u02ba\u02bb\7g\2\2\u02bb\u02bc\7c\2\2\u02bc\u02bd"+
		"\7p\2\2\u02bd\u0082\3\2\2\2\u02be\u02bf\7k\2\2\u02bf\u02c0\7p\2\2\u02c0"+
		"\u02c1\7v\2\2\u02c1\u0084\3\2\2\2\u02c2\u02c3\7h\2\2\u02c3\u02c4\7n\2"+
		"\2\u02c4\u02c5\7q\2\2\u02c5\u02c6\7c\2\2\u02c6\u02c7\7v\2\2\u02c7\u0086"+
		"\3\2\2\2\u02c8\u02c9\7u\2\2\u02c9\u02ca\7v\2\2\u02ca\u02cb\7t\2\2\u02cb"+
		"\u02cc\7k\2\2\u02cc\u02cd\7p\2\2\u02cd\u02ce\7i\2\2\u02ce\u0088\3\2\2"+
		"\2\u02cf\u02d0\7c\2\2\u02d0\u02d1\7t\2\2\u02d1\u02d2\7t\2\2\u02d2\u02d3"+
		"\7c\2\2\u02d3\u02d4\7{\2\2\u02d4\u008a\3\2\2\2\u02d5\u02d6\7n\2\2\u02d6"+
		"\u02d7\7k\2\2\u02d7\u02d8\7u\2\2\u02d8\u02d9\7v\2\2\u02d9\u008c\3\2\2"+
		"\2\u02da\u02db\7o\2\2\u02db\u02dc\7c\2\2\u02dc\u02dd\7r\2\2\u02dd\u008e"+
		"\3\2\2\2\u02de\u02df\7u\2\2\u02df\u02e0\7g\2\2\u02e0\u02e1\7v\2\2\u02e1"+
		"\u0090\3\2\2\2\u02e2\u02e3\7u\2\2\u02e3\u02e4\7v\2\2\u02e4\u02e5\7t\2"+
		"\2\u02e5\u02e6\7w\2\2\u02e6\u02e7\7e\2\2\u02e7\u02e8\7v\2\2\u02e8\u0092"+
		"\3\2\2\2\u02e9\u02ea\7c\2\2\u02ea\u02eb\7v\2\2\u02eb\u0094\3\2\2\2\u02ec"+
		"\u02ed\7g\2\2\u02ed\u02ee\7o\2\2\u02ee\u02ef\7r\2\2\u02ef\u02f0\7v\2\2"+
		"\u02f0\u02f1\7{\2\2\u02f1\u0096\3\2\2\2\u02f2\u02f3\7k\2\2\u02f3\u02f4"+
		"\7p\2\2\u02f4\u02f5\7u\2\2\u02f5\u02f6\7g\2\2\u02f6\u02f7\7t\2\2\u02f7"+
		"\u02f8\7v\2\2\u02f8\u0098\3\2\2\2\u02f9\u02fa\7m\2\2\u02fa\u02fb\7g\2"+
		"\2\u02fb\u02fc\7{\2\2\u02fc\u02fd\7u\2\2\u02fd\u009a\3\2\2\2\u02fe\u02ff"+
		"\7r\2\2\u02ff\u0300\7t\2\2\u0300\u0301\7k\2\2\u0301\u0302\7p\2\2\u0302"+
		"\u0303\7v\2\2\u0303\u009c\3\2\2\2\u0304\u0305\7r\2\2\u0305\u0306\7q\2"+
		"\2\u0306\u0307\7r\2\2\u0307\u0308\7D\2\2\u0308\u0309\7c\2\2\u0309\u030a"+
		"\7e\2\2\u030a\u030b\7m\2\2\u030b\u009e\3\2\2\2\u030c\u030d\7r\2\2\u030d"+
		"\u030e\7q\2\2\u030e\u030f\7r\2\2\u030f\u0310\7H\2\2\u0310\u0311\7t\2\2"+
		"\u0311\u0312\7q\2\2\u0312\u0313\7p\2\2\u0313\u0314\7v\2\2\u0314\u00a0"+
		"\3\2\2\2\u0315\u0316\7r\2\2\u0316\u0317\7w\2\2\u0317\u0318\7u\2\2\u0318"+
		"\u0319\7j\2\2\u0319\u031a\7D\2\2\u031a\u031b\7c\2\2\u031b\u031c\7e\2\2"+
		"\u031c\u031d\7m\2\2\u031d\u00a2\3\2\2\2\u031e\u031f\7r\2\2\u031f\u0320"+
		"\7w\2\2\u0320\u0321\7u\2\2\u0321\u0322\7j\2\2\u0322\u0323\7H\2\2\u0323"+
		"\u0324\7t\2\2\u0324\u0325\7q\2\2\u0325\u0326\7p\2\2\u0326\u0327\7v\2\2"+
		"\u0327\u00a4\3\2\2\2\u0328\u0329\7t\2\2\u0329\u032a\7g\2\2\u032a\u032b"+
		"\7o\2\2\u032b\u032c\7q\2\2\u032c\u032d\7x\2\2\u032d\u032e\7g\2\2\u032e"+
		"\u00a6\3\2\2\2\u032f\u0330\7t\2\2\u0330\u0331\7g\2\2\u0331\u0332\7o\2"+
		"\2\u0332\u0333\7q\2\2\u0333\u0334\7x\2\2\u0334\u0335\7g\2\2\u0335\u0336"+
		"\7C\2\2\u0336\u0337\7n\2\2\u0337\u0338\7n\2\2\u0338\u0339\7G\2\2\u0339"+
		"\u033a\7s\2\2\u033a\u033b\7V\2\2\u033b\u033c\7q\2\2\u033c\u00a8\3\2\2"+
		"\2\u033d\u033e\7t\2\2\u033e\u033f\7g\2\2\u033f\u0340\7o\2\2\u0340\u0341"+
		"\7q\2\2\u0341\u0342\7x\2\2\u0342\u0343\7g\2\2\u0343\u0344\7C\2\2\u0344"+
		"\u0345\7v\2\2\u0345\u00aa\3\2\2\2\u0346\u0347\7u\2\2\u0347\u0348\7k\2"+
		"\2\u0348\u0349\7p\2\2\u0349\u034a\7i\2\2\u034a\u034b\7n\2\2\u034b\u034c"+
		"\7g\2\2\u034c\u034d\7v\2\2\u034d\u034e\7q\2\2\u034e\u034f\7p\2\2\u034f"+
		"\u0350\7U\2\2\u0350\u0351\7g\2\2\u0351\u0352\7v\2\2\u0352\u00ac\3\2\2"+
		"\2\u0353\u0354\7u\2\2\u0354\u0355\7k\2\2\u0355\u0356\7|\2\2\u0356\u0357"+
		"\7g\2\2\u0357\u00ae\3\2\2\2\u0358\u0359\7u\2\2\u0359\u035a\7r\2\2\u035a"+
		"\u035b\7n\2\2\u035b\u035c\7k\2\2\u035c\u035d\7v\2\2\u035d\u00b0\3\2\2"+
		"\2\u035e\u035f\7v\2\2\u035f\u0360\7q\2\2\u0360\u0361\7r\2\2\u0361\u0362"+
		"\7D\2\2\u0362\u0363\7c\2\2\u0363\u0364\7e\2\2\u0364\u0365\7m\2\2\u0365"+
		"\u00b2\3\2\2\2\u0366\u0367\7v\2\2\u0367\u0368\7q\2\2\u0368\u0369\7r\2"+
		"\2\u0369\u036a\7H\2\2\u036a\u036b\7t\2\2\u036b\u036c\7q\2\2\u036c\u036d"+
		"\7p\2\2\u036d\u036e\7v\2\2\u036e\u00b4\3\2\2\2\u036f\u0370\7w\2\2\u0370"+
		"\u0371\7r\2\2\u0371\u0372\7f\2\2\u0372\u0373\7c\2\2\u0373\u0374\7v\2\2"+
		"\u0374\u0375\7g\2\2\u0375\u00b6\3\2\2\2\u0376\u0377\7w\2\2\u0377\u0378"+
		"\7p\2\2\u0378\u0379\7k\2\2\u0379\u037a\7h\2\2\u037a\u037b\7q\2\2\u037b"+
		"\u037c\7t\2\2\u037c\u037d\7o\2\2\u037d\u037e\7P\2\2\u037e\u037f\7c\2\2"+
		"\u037f\u0380\7v\2\2\u0380\u00b8\3\2\2\2\u0381\u0382\7h\2\2\u0382\u0383"+
		"\7n\2\2\u0383\u0384\7k\2\2\u0384\u0385\7r\2\2\u0385\u00ba\3\2\2\2\u0386"+
		"\u0387\7w\2\2\u0387\u0388\7p\2\2\u0388\u0389\7k\2\2\u0389\u038a\7h\2\2"+
		"\u038a\u038b\7q\2\2\u038b\u038c\7t\2\2\u038c\u038d\7o\2\2\u038d\u038e"+
		"\7H\2\2\u038e\u038f\7n\2\2\u038f\u0390\7q\2\2\u0390\u0391\7c\2\2\u0391"+
		"\u0392\7v\2\2\u0392\u00bc\3\2\2\2\u0393\u0394\7w\2\2\u0394\u0395\7p\2"+
		"\2\u0395\u0396\7k\2\2\u0396\u0397\7h\2\2\u0397\u0398\7q\2\2\u0398\u0399"+
		"\7t\2\2\u0399\u039a\7o\2\2\u039a\u039b\7R\2\2\u039b\u039c\7g\2\2\u039c"+
		"\u039d\7t\2\2\u039d\u039e\7o\2\2\u039e\u00be\3\2\2\2\u039f\u03a0\7u\2"+
		"\2\u03a0\u03a1\7\60\2\2\u03a1\u03a2\7v\2\2\u03a2\u03a3\7\60\2\2\u03a3"+
		"\u00c0\3\2\2\2\u03a4\u03a5\7&\2\2\u03a5\u00c2\3\2\2\2\u03a6\u03a7\7/\2"+
		"\2\u03a7\u03a8\7@\2\2\u03a8\u00c4\3\2\2\2\u03a9\u03aa\7%\2\2\u03aa\u00c6"+
		"\3\2\2\2\u03ab\u03ac\7B\2\2\u03ac\u00c8\3\2\2\2\u03ad\u03ae\7E\2\2\u03ae"+
		"\u03af\7q\2\2\u03af\u03b0\7w\2\2\u03b0\u03b1\7p\2\2\u03b1\u03b2\7v\2\2"+
		"\u03b2\u00ca\3\2\2\2\u03b3\u03b4\7W\2\2\u03b4\u00cc\3\2\2\2\u03b5\u03b6"+
		"\7`\2\2\u03b6\u00ce\3\2\2\2\u03b7\u03b8\7^\2\2\u03b8\u00d0\3\2\2\2\u03b9"+
		"\u03bb\t\5\2\2\u03ba\u03b9\3\2\2\2\u03bb\u03bc\3\2\2\2\u03bc\u03ba\3\2"+
		"\2\2\u03bc\u03bd\3\2\2\2\u03bd\u00d2\3\2\2\2\u03be\u03c0\t\5\2\2\u03bf"+
		"\u03be\3\2\2\2\u03c0\u03c1\3\2\2\2\u03c1\u03bf\3\2\2\2\u03c1\u03c2\3\2"+
		"\2\2\u03c2\u03c3\3\2\2\2\u03c3\u03c5\5\u0111\u0089\2\u03c4\u03c6\t\5\2"+
		"\2\u03c5\u03c4\3\2\2\2\u03c6\u03c7\3\2\2\2\u03c7\u03c5\3\2\2\2\u03c7\u03c8"+
		"\3\2\2\2\u03c8\u00d4\3\2\2\2\u03c9\u03ca\7v\2\2\u03ca\u03cb\7t\2\2\u03cb"+
		"\u03cc\7w\2\2\u03cc\u03d3\7g\2\2\u03cd\u03ce\7h\2\2\u03ce\u03cf\7c\2\2"+
		"\u03cf\u03d0\7n\2\2\u03d0\u03d1\7u\2\2\u03d1\u03d3\7g\2\2\u03d2\u03c9"+
		"\3\2\2\2\u03d2\u03cd\3\2\2\2\u03d3\u00d6\3\2\2\2\u03d4\u03d9\5\t\5\2\u03d5"+
		"\u03d8\5\13\6\2\u03d6\u03d8\5\t\5\2\u03d7\u03d5\3\2\2\2\u03d7\u03d6\3"+
		"\2\2\2\u03d8\u03db\3\2\2\2\u03d9\u03d7\3\2\2\2\u03d9\u03da\3\2\2\2\u03da"+
		"\u00d8\3\2\2\2\u03db\u03d9\3\2\2\2\u03dc\u03dd\7-\2\2\u03dd\u03de\7-\2"+
		"\2\u03de\u00da\3\2\2\2\u03df\u03e0\7/\2\2\u03e0\u03e1\7/\2\2\u03e1\u00dc"+
		"\3\2\2\2\u03e2\u03e3\7(\2\2\u03e3\u00de\3\2\2\2\u03e4\u03e5\7>\2\2\u03e5"+
		"\u00e0\3\2\2\2\u03e6\u03e7\7@\2\2\u03e7\u00e2\3\2\2\2\u03e8\u03e9\7>\2"+
		"\2\u03e9\u03ea\7?\2\2\u03ea\u00e4\3\2\2\2\u03eb\u03ec\7@\2\2\u03ec\u03ed"+
		"\7?\2\2\u03ed\u00e6\3\2\2\2\u03ee\u03ef\7?\2\2\u03ef\u03f0\7?\2\2\u03f0"+
		"\u00e8\3\2\2\2\u03f1\u03f2\7#\2\2\u03f2\u03f3\7?\2\2\u03f3\u00ea\3\2\2"+
		"\2\u03f4\u040a\7?\2\2\u03f5\u03f6\7-\2\2\u03f6\u040a\7?\2\2\u03f7\u03f8"+
		"\7/\2\2\u03f8\u040a\7?\2\2\u03f9\u03fa\7,\2\2\u03fa\u040a\7?\2\2\u03fb"+
		"\u03fc\7\61\2\2\u03fc\u040a\7?\2\2\u03fd\u03fe\7\'\2\2\u03fe\u040a\7?"+
		"\2\2\u03ff\u0400\7>\2\2\u0400\u0401\7>\2\2\u0401\u040a\7?\2\2\u0402\u0403"+
		"\7@\2\2\u0403\u0404\7@\2\2\u0404\u040a\7?\2\2\u0405\u0406\7(\2\2\u0406"+
		"\u040a\7?\2\2\u0407\u0408\7~\2\2\u0408\u040a\7?\2\2\u0409\u03f4\3\2\2"+
		"\2\u0409\u03f5\3\2\2\2\u0409\u03f7\3\2\2\2\u0409\u03f9\3\2\2\2\u0409\u03fb"+
		"\3\2\2\2\u0409\u03fd\3\2\2\2\u0409\u03ff\3\2\2\2\u0409\u0402\3\2\2\2\u0409"+
		"\u0405\3\2\2\2\u0409\u0407\3\2\2\2\u040a\u00ec\3\2\2\2\u040b\u040c\7/"+
		"\2\2\u040c\u00ee\3\2\2\2\u040d\u040e\7-\2\2\u040e\u00f0\3\2\2\2\u040f"+
		"\u0410\7,\2\2\u0410\u00f2\3\2\2\2\u0411\u0412\7\61\2\2\u0412\u00f4\3\2"+
		"\2\2\u0413\u0414\7\'\2\2\u0414\u00f6\3\2\2\2\u0415\u0416\7*\2\2\u0416"+
		"\u00f8\3\2\2\2\u0417\u0418\7+\2\2\u0418\u00fa\3\2\2\2\u0419\u041a\7>\2"+
		"\2\u041a\u041b\7>\2\2\u041b\u00fc\3\2\2\2\u041c\u041d\7@\2\2\u041d\u041e"+
		"\7@\2\2\u041e\u00fe\3\2\2\2\u041f\u0420\7~\2\2\u0420\u0421\7~\2\2\u0421"+
		"\u0100\3\2\2\2\u0422\u0423\7(\2\2\u0423\u0424\7(\2\2\u0424\u0102\3\2\2"+
		"\2\u0425\u0426\7#\2\2\u0426\u0104\3\2\2\2\u0427\u0428\7=\2\2\u0428\u0106"+
		"\3\2\2\2\u0429\u042a\7<\2\2\u042a\u0108\3\2\2\2\u042b\u042c\7~\2\2\u042c"+
		"\u010a\3\2\2\2\u042d\u042e\7}\2\2\u042e\u010c\3\2\2\2\u042f\u0430\7\177"+
		"\2\2\u0430\u010e\3\2\2\2\u0431\u0432\7.\2\2\u0432\u0110\3\2\2\2\u0433"+
		"\u0434\7\60\2\2\u0434\u0112\3\2\2\2\u0435\u0436\7]\2\2\u0436\u0114\3\2"+
		"\2\2\u0437\u0438\7_\2\2\u0438\u0116\3\2\2\2\u0439\u043a\7$\2\2\u043a\u0118"+
		"\3\2\2\2\u043b\u043c\7A\2\2\u043c\u011a\3\2\2\2\u043d\u0441\7$\2\2\u043e"+
		"\u0440\n\7\2\2\u043f\u043e\3\2\2\2\u0440\u0443\3\2\2\2\u0441\u043f\3\2"+
		"\2\2\u0441\u0442\3\2\2\2\u0442\u0444\3\2\2\2\u0443\u0441\3\2\2\2\u0444"+
		"\u0445\7$\2\2\u0445\u011c\3\2\2\2\16\2\u0120\u012a\u0138\u03bc\u03c1\u03c7"+
		"\u03d2\u03d7\u03d9\u0409\u0441\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}