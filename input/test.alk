/*

symbolic $n : int;

sum = 0;
n = $n;

i = 1;
while (i <= n)
// invariant sum == i * (i - 1) / 2 && i <= n + 1
{
    sum = sum + i;
    i++;
}

*/

symbolic $n : int;
symbolic $i : int, $sum : int;

sum = 0;
i = 1;
n = $n;

// proof obligation 1: the invariant holds in the initial state of while
assert sum == i * (i - 1) / 2 && i <= n + 1;

// proof obligation 2: check the loop invariant
i = $i;
sum = $sum;
assume i <= n; // conditia
assume sum == i * (i - 1) / 2 && i <= n + 1; // invariantul
sum = sum + i;
i++;
assert sum == i * (i - 1) / 2 && i <= n + 1; // invariantul
