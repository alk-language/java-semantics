plateau(a: array<int>) : int
requires forall i:int :: 0 <= i && i < a.size()-1 ==> a[i] <= a[i+1]
ensures (forall k:int :: forall l:int ::
    0 <= k && k <= l && l < a.size() && a[k] == a[l]
    ==>
    (l-k) <= result)
{
    lg = 1;
    i = 1;
    while (i < a.size())
    invariant (forall k:int :: forall l:int ::
        0 <= k && k <= l && l < i && a[k] == a[l]
        ==>
        (l-k) <= lg)
    modifies lg
    {
        if (a[i] == a[i - lg]) lg = lg+1;
        i = i + 1;
    }
    return lg;
}

symbolic $a: array<int>;
a = $a;
//assume a.size() < 4;
assume forall i:int :: 0 <= i && i < a.size()-1 ==> a[i] <= a[i+1];
//x = plateau(a);
for (i = 0; i < 4; ++i)
{
    havoc a;
    assume a.size() == i;
    x[i] = plateau(a);
}

assert x[0] <= x[1] && x[1] <= x[2] && x[2] <= x[3];

Internal error [0:0]
Unknown Z3 check! [5:3]